{"version":3,"sources":["reducers/area-reducer.js","data/initialState.js","actions/area-action.js","reducers/snow-reducer.js","reducers/temperature-reducer.js","reducers/stations-reducer.js","reducers/index.js","styles/size.js","components/Title.js","components/WeatherDetailsList.js","components/SnowDetails.js","utils/calNewSnowLastDay.js","components/Chart.js","data/index.js","data/weatherStationDetails.js","components/WindChart.js","components/Main.js","components/Burger/Burger.js","components/Menu/Menu.js","App.js","serviceWorker.js","index.js","images/Thar_Peak.jpg"],"names":["area","name","areaReducer","state","action","payload","type","id","snow","lowerStationLastDay","lowerStationLastTwoDay","lowerStationLastWeek","upperStationLastDay","upperStationLastTwoDay","upperStationLastWeek","snowReducer","temperature","lowerStationTemp","upperStationTemp","temperatureReducer","stations","lowerStationName","lowerStationElevation","upperStationName","upperStationElevation","stationsReducer","combineReducers","Container","styled","Title","className","Weather","WeatherDetailsList","highElevationName","lowElevationName","highElevation","lowElevation","highTemp","lowTemp","icon","faTemperatureLow","size","color","String","fromCharCode","SnowDetailsList","SnowDetails","newSnowLastDayLower","newSnowLastTwoDayLower","newSnowLastWeekLower","snowDepthLower","newSnowLastDayUpper","newSnowLastTwoDayUpper","newSnowLastWeekUpper","snowDepthUpper","faSnowflake","calNewSnowLastDay","data","difference","newSnowArray","i","length","push","Chart","options","title","display","text","littleBearData","coqSummitData","cayooshSummitData","blowDownMidData","allisonPassData","foundationMinesData","stationNumbers","coquihalla","nameLower","elevationLower","nameUpper","elevationUpper","lower","upper","seasonDataLower","seasonDataUpper","duffey","manning","rogerspass","rogersPassData","abbottData","Wind","WindChart","windUpper","windLower","lowerWindDirection","lowerStationWindDirection","lowerWindSpeed","lowerStationWindSpeed","upperWindDirection","upperStationWindDirection","upperWindSpeed","upperStationWindSpeed","windDirection","windSpeed","stationName","useState","degree","rotation","setRotation","chartData","setChartData","datasets","labels","backgroundColor","circumference","Math","PI","cutoutPercentage","plugins","datalabels","borderColor","align","anchor","offset","borderRadius","borderWidth","legend","tooltips","enabled","windDirectionLastTwoDays","arr1","arr2","setTimeout","transform","rotate","faLocationArrow","onClick","connect","props","lowerStationData","setLowerStationData","upperStationData","setUpperStationData","newSnow","setNewSnow","upperStation","lowerStation","wind","setWind","label","fill","historicSnowData","setHistoricSnowData","lowerWeather","useEffect","station","a","async","url","fetch","response","json","getWeather","upperWeather","console","log","newSnowLowerStation","slice","map","day","snowHeight","newSnowUpperStation","newTwoDaySnowLowerStation","newTwoDaySnowUpperStation","newLastWeekSnowLowerStation","newLastWeekSnowUpperStation","getNewSnowLowerStation","getNewSnowUpperStation","getNewTwoSnowLowerStation","getNewTwoSnowUpperStation","getNewLastWeekSnowLowerStation","getNewLastWeekSnowUpperStation","sumNewSnowLowerStation","reduce","b","sumNewSnowUpperStation","sumNewTwoDaySnowLowerStation","sumNewTwoDaySnowUpperStation","sumNewLastWeekSnowLowerStation","sumNewLastWeekSnowUpperStation","lowerSeasonData","upperSeasonData","lowerLabel","upperLabel","getSnowPackData","arr","dataArray","dateArray","date","charAt","snowpack","upperSnowData","lowerSnowData","airTempAvg","lowerStationNewSnowLastDay","lowerStationNewSnowLastTwoDay","lowerStationNewSnowLastWeek","lowerStationSnowDepth","upperStationNewSnowLastDay","upperStationNewSnowTwoDay","upperStationNewSnowLastWeek","upperStationSnowDepth","lastTwoDayWindUpperStation","windDirAvg","windSpeedAvg","lastTwoDayWindLowerStation","StyledBurger","Burger","open","setOpen","StyledMenu","dispatch","setCurrentArea","e","target","img","App","Boolean","window","location","hostname","match","store","createStore","rootReducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ade8c537.chunk.js","sourcesContent":["import { initialState } from '../data/initialState';\nimport { SET_CURRENT_AREA } from '../actions/area-action';\nconst { area } = initialState;\n\nconst areaReducer = (state = area, action) => {\n  const { payload } = action\n  switch (action.type) {\n    case SET_CURRENT_AREA:\n      return {\n        ...state, name: payload.id\n      }\n    default:\n      return state;\n  }\n\n}\n\nexport default areaReducer;","export const initialState = {\n  area: {\n    name: \"\"\n  },\n  stations: {\n    lowerStationName: \"\",\n    lowerStationElevation: \"\",\n    upperStationName: \"\",\n    upperStationElevation: \"\",\n  },\n  temperature: {\n    lowerStationTemp: null,\n    upperStationTemp: null\n  },\n  snow: {\n    lowerStationLastDay: null,\n    lowerStationLastTwoDay: null,\n    lowerStationLastWeek: null,\n    upperStationLastDay: null,\n    upperStationLastTwoDay: null,\n    upperStationLastWeek: null,\n  },\n  historicSnowData: {\n    data: {\n      labels: [],\n      datasets: [\n        { label: \"\", fill: false, backgroundColor: \"\", data: [] },\n        { label: \"\", fill: false, backgroundColor: \"\", data: [] }\n      ]\n    }\n  }\n};","export const SET_CURRENT_AREA = 'SET_CURRENT_AREA';\n\nexport const setCurrentArea = (id) => {\n  return {\n    type: SET_CURRENT_AREA,\n    id\n  }\n}","import { initialState } from '../data/initialState';\nconst { snow } = initialState;\n\nconst snowReducer = (state = snow, action) => {\n  return state;\n}\n\nexport default snowReducer;","import { initialState } from '../data/initialState';\nconst { temperature } = initialState;\n\nconst temperatureReducer = (state = temperature, action) => {\n  return state;\n}\n\nexport default temperatureReducer;","import { initialState } from '../data/initialState';\nconst { stations } = initialState;\n\nconst stationsReducer = (state = stations, action) => {\n  return state;\n}\n\nexport default stationsReducer;","import { combineReducers } from 'redux';\nimport areaReducer from './area-reducer';\nimport snowReducer from './snow-reducer';\nimport temperatureReducer from './temperature-reducer';\nimport stationsReducer from './stations-reducer';\n\nexport default combineReducers({\n  areaReducer,\n  snowReducer,\n  temperatureReducer,\n  stationsReducer\n});","export default {\n  spacing: \"4rem\",\n  headerHeight: '70px',\n  footerHeight: '100px',\n};\n\n","import React from 'react'\nimport styled from \"@emotion/styled\";\n\nconst Container = styled(\"div\")`\n  grid-area: title;\n\n.title {\n  margin: 0;\n  padding: 0;\n  text-align: right;\n}\n\nh1 {\n  justify-content: flex-end;\n  font-size: 3.3em;\n  line-height: 1.25em;\n  color: #fff;\n}\n`\nexport const Title = () => {\n  return (\n    <Container>\n      <div className=\"title\">\n        <h1>BC South Coast</h1>\n        <h1>Backcountry </h1>\n        <h1>Weather</h1>\n      </div>\n    </Container>\n  )\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTemperatureLow } from '@fortawesome/free-solid-svg-icons';\n\nconst Weather = styled(\"div\")` \ndisplay: flex;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\nalign-content: center;\nbackground: rgb(244,247,250, 0.7);\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.flex-item {\n  width: 50%;\n  text-align: center;\n}\nh1{\n  margin: 0;\n  padding: 0;\n  font-size: 1.5em;\n}\nh2 {\n  font-size: 1.5rem;\n  font-weight: 900;\n  text-align: center;\n  color: #505865;\n  position: relative;\n  margin: 0 0 25px;\n  text-transform: uppercase;\n}\n\nh3 {\n  margin: 0 0 5px 0;\n  font-size: 1em;\n  color: #1a366c;\n  text-transform: uppercase;\n}\nul {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\nli {\n  list-style: none;\n}\n\np {\n  margin: 0;\n  font-size: .8em;\n}\n.cell {\n  float: left;\n  margin-bottom: 20px;\n}\n.cell:last-child {\n  float: right;\n}\n.title {\n  width: 100%;\n  text-align: center;\n  margin: 15px;\n}\n.weather-value {\n  font-size: 1.25em;\n  position: relative;\n  top: 5px;\n}\n`\n\nexport const WeatherDetailsList = ({ highElevationName, lowElevationName, highElevation, lowElevation, highTemp, lowTemp }) => {\n  return (\n    <Weather>\n      <h2 className=\"title\">Current Temperature</h2> <FontAwesomeIcon icon={faTemperatureLow} size='3x' color='#505865' />\n      <h3 className=\"title\">{highElevationName} {highElevation}</h3>\n      <div className=\"flex-item\">\n        <div className=\"weather-value\">\n          <h1>{highTemp} {String.fromCharCode(176)}C</h1>\n        </div>\n      </div>\n      <h3 className=\"title\">{lowElevationName} {lowElevation}</h3>\n      <div className=\"flex-item\">\n        <div className=\"weather-value\">\n          <h1>{lowTemp} {String.fromCharCode(176)}C</h1>\n        </div>\n      </div>\n    </Weather>\n  )\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSnowflake } from '@fortawesome/free-solid-svg-icons';\n\nconst SnowDetailsList = styled(\"div\")`\ngrid-area: snowConditions;\nmargin-left: 60px;\nmargin-right: 60px;\ndisplay: flex;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\nalign-content: center;\nbackground: rgb(244,247,250, 0.7);\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\nh1{\n  margin: 0;\n  padding: 0;\n  font-size: 1.5em;\n}\nh2 {\n  font-size: 1.5rem;\n  font-weight: 900;\n  text-align: center;\n  color: #505865;\n  position: relative;\n  margin: 0 0 25px;\n  text-transform: uppercase;\n}\n\nh3 {\n  margin: 0 0 10px 0;\n  font-size: 1em;\n  color: #1a366c;\n  text-transform: uppercase;\n}\np {\n  margin: 0;\n}\n\n.title {\n  width: 100%;\n  text-align: center;\n  margin: 15px;\n}\n\n.flex-item {\n  width: 25%;\n  text-align: center;\n}\n`\n\nexport const SnowDetails = ({ lowElevationName, lowElevation, highElevationName, highElevation, newSnowLastDayLower, newSnowLastTwoDayLower, newSnowLastWeekLower, snowDepthLower, newSnowLastDayUpper, newSnowLastTwoDayUpper, newSnowLastWeekUpper, snowDepthUpper }) => {\n  return (\n    <SnowDetailsList>\n      <h2 className=\"title\">Snow Conditions</h2><FontAwesomeIcon icon={faSnowflake} size='3x' color='#505865' />\n      <h3 className=\"title\">{highElevationName} {highElevation}</h3>\n      <div className=\"flex-item\">\n        <p>24hr</p>\n      </ div>\n      <div className=\"flex-item\">\n        <p>48hr</p></ div>\n      <div className=\"flex-item\">\n        <p>7 Days</p>\n      </ div>\n      <div className=\"flex-item\">\n        <p>Base</p>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastDayUpper}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastTwoDayUpper}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastWeekUpper}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{snowDepthUpper}cm</h1>\n      </ div>\n      <h3 className=\"title\">{lowElevationName} {lowElevation}</h3>\n      <div className=\"flex-item\">\n        <p>24hr</p>\n      </ div>\n      <div className=\"flex-item\">\n        <p>48hr</p></ div>\n      <div className=\"flex-item\">\n        <p>7 Days</p>\n      </ div>\n      <div className=\"flex-item\">\n        <p>Base</p>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastDayLower}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastTwoDayLower}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{newSnowLastWeekLower}cm</h1>\n      </ div>\n      <div className=\"flex-item\">\n        <h1>{snowDepthLower}cm</h1>\n      </ div>\n\n    </SnowDetailsList>\n  )\n}","export const calNewSnowLastDay = (data) => {\n  let snow = data[0];\n  let newSnowArray = [];\n  let difference;\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] < snow && !undefined) {\n      difference = snow - data[i];\n      newSnowArray.push(difference);\n    }\n    snow = data[i];\n  }\n  return newSnowArray;\n}","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nexport const Chart = ({ data }) => {\n\n  return (\n    <div className=\"chart\">\n      <Line\n        data={data}\n        options={{\n          title: {\n            display: true,\n            text: \"Season Snowfall\"\n          }\n        }\n        } />\n    </div>\n  );\n};","import littleBearData from './littleBearData.json';\nimport coqSummitData from './coqSummitData.json';\nimport cayooshSummitData from './cayooshSummitData.json';\nimport blowDownMidData from './blowDownMidData.json';\nimport allisonPassData from './allisonPassData.json';\nimport foundationMinesData from './foundationMinesData.json';\n// import abbottData from './abbottData.json';\n// import rogersPassData from './rogerPassData.json';\n\nexport const data = {\n  littleBearData,\n  coqSummitData,\n  cayooshSummitData,\n  blowDownMidData,\n  allisonPassData,\n  foundationMinesData,\n  // abbottData,\n  // rogersPassData\n}","import { data } from './index';\n\nconst { littleBearData, coqSummitData, cayooshSummitData, blowDownMidData, foundationMinesData, allisonPassData, abbottData, rogersPassData } = data;\n\nexport const stationNumbers = {\n  coquihalla: {\n    nameLower: \"Coquihalla Summit\",\n    elevationLower: \"1220m\",\n    nameUpper: \"Little Bear\",\n    elevationUpper: \"1660m\",\n    lower: 15,\n    upper: 17,\n    seasonDataLower: coqSummitData,\n    seasonDataUpper: littleBearData\n  },\n  duffey: {\n    nameLower: \"Cayoosh Summit\",\n    elevationLower: \"1250m\",\n    nameUpper: \"Blowdown Mid\",\n    elevationUpper: \"1890m\",\n    lower: 74,\n    upper: 20,\n    seasonDataLower: cayooshSummitData,\n    seasonDataUpper: blowDownMidData\n  },\n  manning: {\n    nameLower: \"Allison Pass\",\n    elevationLower: \"1340m\",\n    nameUpper: \"Foundation Mines\",\n    elevationUpper: \"1650m\",\n    lower: 73,\n    upper: 13,\n    seasonDataLower: allisonPassData,\n    seasonDataUpper: foundationMinesData\n  },\n  rogerspass: {\n    nameLower: \"Rogers Pass\",\n    elevationLower: \"1315m\",\n    nameUpper: \"Abbott\",\n    elevationUpper: \"2130m\",\n    lower: 98,\n    upper: 91,\n    seasonDataLower: rogersPassData,\n    seasonDataUpper: abbottData\n  }\n};","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport { faSnowflake } from '@fortawesome/free-solid-svg-icons';\n\nconst Wind = styled(\"div\")` \ndisplay: flex;\nposition: relative;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-content: center;\nbackground: rgb(244,247,250, 0.7);\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.locationArrow {\n  position: absolute;\n  align-self: center;\n  margin-top: 8px;\n  transform: rotate(-45deg);\n}\n\n.wind {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n }\n\nbutton {\n  margin-left: 10px;\n  background: grey;\n  color: white;\n}\n\n.windSpeed {\n  margin-right: 10px;\n  font-size: 1.2em;\n}\n\n .title {\n  width: 100%;\n  text-align: center;\n  margin: 15px;\n}\n\nh3 {\n  margin: 0 0 5px 0;\n  font-size: 1em;\n  color: #1a366c;\n  text-transform: uppercase;\n}\n\n.north {\n  position: absolute;\n\tleft: 49%; top: 32%;\n}\n/* South */\n.south {\n  position: absolute;\n\tleft: 49%; bottom: 26%;\n}\n\n/* East */\n.east {\n  position: absolute;\n\tright: 32%; top: 50%;\n}\n/* West */\n.west {\n  position: absolute;\n\tleft: 32%; top: 50%;\n}\n`\n\nexport const WindChart = ({ lowElevationName, highElevationName, windUpper, windLower }) => {\n\n  const lowerStationName = lowElevationName && lowElevationName;\n  const lowerWindDirection = windLower && windLower.lowerStationWindDirection;\n  const lowerWindSpeed = windLower && windLower.lowerStationWindSpeed;\n\n  const upperStationName = highElevationName && highElevationName;\n  const upperWindDirection = windUpper && windUpper.upperStationWindDirection;\n  const upperWindSpeed = windUpper && windUpper.upperStationWindSpeed;\n\n  const windDirection = windUpper ? upperWindDirection : lowerWindDirection;\n  const windSpeed = windUpper ? upperWindSpeed : lowerWindSpeed;\n  const stationName = highElevationName ? upperStationName : lowerStationName;\n\n  const [rotation, setRotation] = useState({\n    degree: 0\n  });\n  const [chartData, setChartData] = useState({\n    data: [0, 360]\n  })\n\n  const data = {\n    datasets: [{\n      labels: [\"Red\", \"Blue\"],\n      data: chartData.data,\n      backgroundColor: [\n        \"rgb(255, 99, 132)\",\n        \"rgb(54, 162, 235)\",\n        \"rgb(255, 205, 86)\"\n      ]\n    }]\n  }\n\n  const options = {\n\n    circumference: Math.PI * 2,\n    rotation: Math.PI,\n    cutoutPercentage: 80,\n    plugins: {\n      datalabels: {\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        borderColor: '#ffffff',\n        align: 'start',\n        anchor: 'start',\n        offset: 10,\n        borderRadius: 4,\n        borderWidth: 1,\n      }\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      enabled: false\n    }\n  }\n\n  const clearState = () => {\n    setRotation({\n      degree: 0\n    })\n    setChartData({\n      data: [0, 360]\n    })\n  }\n\n  const windDirectionLastTwoDays = (arr1, arr2) => {\n    for (let i = 0; i < arr1.length + 1; i++) {\n      if (i === arr1.length + 1) {\n        clearState();\n      } else {\n        setTimeout(function timer() {\n          setRotation({\n            degree: arr1[i],\n          })\n          setChartData({\n            data: [arr2[i] * 5, 360]\n          })\n        }, i * 100);\n      }\n    }\n  }\n\n  return (\n    <Wind>\n      {/* <h2 className=\"title\">Snow Conditions</h2><FontAwesomeIcon icon={faSnowflake} size='3x' color='#505865' /> */}\n      <h3 className=\"title\">{stationName ? stationName : 'Station'}</h3>\n      <Doughnut data={data} options={options} />\n      <FontAwesomeIcon className='locationArrow' transform={{ rotate: rotation.degree }} size='2x' color='red' icon={faLocationArrow} />\n      <span className='north'>N</span>\n      <span className='east'>E</span>\n      <span className='south'>S</span>\n      <span className='west'>W</span>\n\n      <div className=\"wind\">\n        <button onClick={() => windDirectionLastTwoDays(windDirection, windSpeed)}>48hr Playback</button>\n        <h3 className=\"windSpeed\">{data.datasets[0].data[0] ? data.datasets[0].data[0] / 5 : 0} km/h</h3>\n      </div>\n\n    </Wind >\n  )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"@emotion/styled\";\nimport size from \"../styles/size\";\nimport { Title } from './Title';\nimport { WeatherDetailsList } from './WeatherDetailsList';\nimport { SnowDetails } from './SnowDetails';\nimport { calNewSnowLastDay } from '../utils/calNewSnowLastDay';\nimport { Chart } from '../components/Chart';\nimport { stationNumbers } from '../data/weatherStationDetails';\nimport { WindChart } from './WindChart';\n\n\nconst Container = styled(\"main\")`\n    padding-top: 80px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n\n    .dashboard {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n      grid-gap: ${size.spacing};\n    }\n\n    .column-item {\n      grid-column-end: span 1;\n    }\n\n    .item-column {\n      grid-column-end: span 1;\n      padding: calc(var(${size.spacing}) / 2);\n      height: 320px;\n    }\n\n    .snow-conditions {\n      height: 320px;\n      grid-column-end: span 2;\n      padding: calc(var(${size.spacing}) / 2);\n    }\n\n    .snow-chart {\n      grid-column: 1 / -1;\n      background: rgb(244,247,250, 0.7);\n\n    }\n\n@media only screen and (max-width: 849px) {\n  .dashboard {\n    display: grid;\n    grid-template-areas: \n      \"title\"\n      \"snowConditions\"\n      \"weather\"\n      \"wind1\"\n      \"wind2\"\n      \"snowChart\";\n    grid-template-rows: 350px 350px 350px 350px 350px 1fr;\n    grid-template-columns: 1fr;\n    justify-items: center;\n  } \n  .title {\n    width: 380px;\n    margin-top: 20px;\n    grid-area: title;\n  }\n  .snow-conditions {\n    width: 380px;\n    grid-area: snowConditions;\n  } \n  .weather {\n    width: 380px;\n    grid-area: weather;\n  }\n  .wind-chart1 {\n    width: 380px;\n    grid-area: wind1;\n  }\n  .wind-chart2 {\n    width: 380px;\n    grid-area: wind2;\n  }\n  .snow-chart {\n    width: 95%;\n    grid-area: snowChart;\n  }\n}\n\n@media only screen and (min-width: 850px) and (max-width: 1300px) {\n  .dashboard {\n    display: grid;\n    grid-template-areas: \n      \"snowConditions title\"\n      \"weather weather\"\n      \"wind1 wind2\"\n      \"snowChart snowChart\";\n    grid-template-rows: 350px 350px 350px 1fr;\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    margin: 20px;\n  } \n  .title {\n    margin-top: 20px;\n    width: 380px;\n    grid-area: title;\n  }\n  .snow-conditions {\n    grid-area: snowConditions;\n    height: 100%;\n    width: 380px;\n  } \n  .weather {\n    grid-area: weather;\n    width: 380px;\n  }\n  .wind-chart1 {\n    width: 380px;\n    grid-area: wind1;\n  }\n  .wind-chart2 {\n    width: 380px;\n    grid-area: wind2;\n  }\n  .snow-chart {\n    width: 95%;\n    grid-area: snowChart;\n  }\n}\n\n@media only screen and (min-width: 1301px) {\n  .dashboard {\n    display: grid;\n    grid-template-areas: \n      \"snowConditions snowConditions title\"\n      \"weather wind1 wind2\"\n      \"snowChart snowChart snowChart\";\n    grid-template-rows: 350px 350px 1fr;;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-items: center;\n    margin: 20px;\n  } \n  .title {\n    margin-top: 20px;\n    width: 380px;\n    grid-area: title;\n  }\n  .snow-conditions {\n    grid-area: snowConditions;\n    height: 100%;\n    grid-column: span 2;\n  } \n  .weather {\n    grid-area: weather;\n    width: 380px;\n  }\n  .wind-chart1 {\n    width: 380px;\n    grid-area: wind1;\n  }\n  .wind-chart2 {\n    width: 380px;\n    grid-area: wind2;\n  }\n  .snow-chart {\n    width: 95%;\n    grid-area: snowChart;\n  }\n}\n    \n`\nconst Main = (props) => {\n  const { name } = props;\n\n  const [lowerStationData, setLowerStationData] = useState([]);\n  const [upperStationData, setUpperStationData] = useState([]);\n  const [newSnow, setNewSnow] = useState({\n    lowerStationLastDay: null,\n    lowerStationLastTwoDay: null,\n    lowerStationLastWeek: null,\n    upperStationLastDay: null,\n    upperStationLastTwoDay: null,\n    upperStationLastWeek: null,\n  });\n  const [wind, setWind] = useState({\n    upperStation: {\n      upperStationWindDirection: [],\n      upperStationWindSpeed: [],\n    },\n    lowerStation: {\n      lowerStationWindDirection: [],\n      lowerStationWindSpeed: []\n    }\n  })\n  const [historicSnowData, setHistoricSnowData] = useState(\n    {\n      data: {\n        labels: [],\n        datasets: [\n          { label: \"\", fill: false, backgroundColor: \"\", data: [] },\n          { label: \"\", fill: false, backgroundColor: \"\", data: [] }\n        ]\n      }\n    }\n  )\n  const lowerWeather = name && stationNumbers[name].lower;\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLowerStationData(data);\n    }\n\n    getWeather(lowerWeather);\n\n  }, [lowerWeather])\n\n  const upperWeather = name && stationNumbers[name].upper;\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data)\n      setUpperStationData(data)\n    }\n\n    getWeather(upperWeather);\n\n  }, [upperWeather])\n\n  useEffect(() => {\n    const lastDaySnowLowerStation = lowerStationData.slice(0, 23);\n    const newSnowLowerStation = lastDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastDaySnowUpperStation = upperStationData.slice(0, 23);\n    const newSnowUpperStation = lastDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowLowerStation = lowerStationData.slice(0, 47);\n    const newTwoDaySnowLowerStation = lastTwoDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowUpperStation = upperStationData.slice(0, 47);\n    const newTwoDaySnowUpperStation = lastTwoDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowLowerStation = lowerStationData.slice(0, 160);\n    const newLastWeekSnowLowerStation = lastWeekSnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowUpperStation = upperStationData.slice(0, 160);\n    const newLastWeekSnowUpperStation = lastWeekSnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n\n    const getNewSnowLowerStation = calNewSnowLastDay(newSnowLowerStation);\n    const getNewSnowUpperStation = calNewSnowLastDay(newSnowUpperStation);\n    const getNewTwoSnowLowerStation = calNewSnowLastDay(newTwoDaySnowLowerStation);\n    const getNewTwoSnowUpperStation = calNewSnowLastDay(newTwoDaySnowUpperStation);\n    const getNewLastWeekSnowLowerStation = calNewSnowLastDay(newLastWeekSnowLowerStation);\n    const getNewLastWeekSnowUpperStation = calNewSnowLastDay(newLastWeekSnowUpperStation);\n    const sumNewSnowLowerStation = getNewSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewSnowUpperStation = getNewSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowLowerStation = getNewTwoSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowUpperStation = getNewTwoSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowLowerStation = getNewLastWeekSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowUpperStation = getNewLastWeekSnowUpperStation.reduce((a, b) => a + b, 0);\n\n    setNewSnow({\n      lowerStationLastDay: sumNewSnowLowerStation,\n      lowerStationLastTwoDay: sumNewTwoDaySnowLowerStation,\n      lowerStationLastWeek: sumNewLastWeekSnowLowerStation,\n      upperStationLastDay: sumNewSnowUpperStation,\n      upperStationLastTwoDay: sumNewTwoDaySnowUpperStation,\n      upperStationLastWeek: sumNewLastWeekSnowUpperStation\n    });\n  }, [lowerStationData, upperStationData])\n\n  const lowerSeasonData = name && stationNumbers[name].seasonDataLower;\n  const upperSeasonData = name && stationNumbers[name].seasonDataUpper;\n  const lowerLabel = name && stationNumbers[name].elevationLower;\n  const upperLabel = name && stationNumbers[name].elevationUpper;\n\n  useEffect(() => {\n    const getSnowPackData = (arr) => {\n      const dataArray = [];\n      const dateArray = [];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10))\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n      return { dataArray, dateArray };\n    };\n    const upperSnowData = getSnowPackData(upperSeasonData);\n    const lowerSnowData = getSnowPackData(lowerSeasonData);\n    setHistoricSnowData({\n      data: {\n        labels: lowerSnowData.dateArray,\n        datasets: [\n          {\n            label: lowerLabel,\n            backgroundColor: \"#50D8D7\",\n            data: lowerSnowData.dataArray\n          },\n          {\n            label: upperLabel,\n            backgroundColor: \"#547AA5\",\n            data: upperSnowData.dataArray\n          }]\n      }\n    })\n  }, [lowerLabel, lowerSeasonData, upperLabel, upperSeasonData])\n\n  const lowerStationName = name && stationNumbers[name].nameLower;\n  const lowerStationElevation = name && stationNumbers[name].elevationLower;\n  const lowerStation = lowerStationData && lowerStationData[0];\n  const lowerStationTemp = lowerStation && lowerStation.airTempAvg;\n  const lowerStationNewSnowLastDay = newSnow && newSnow.lowerStationLastDay;\n  const lowerStationNewSnowLastTwoDay = newSnow && newSnow.lowerStationLastTwoDay;\n  const lowerStationNewSnowLastWeek = newSnow && newSnow.lowerStationLastWeek;\n  const lowerStationSnowDepth = lowerStation && lowerStation.snowHeight;\n\n  const upperStationName = name && stationNumbers[name].nameUpper;\n  const upperStationElevation = name && stationNumbers[name].elevationUpper;\n  const upperStation = upperStationData && upperStationData[0];\n  const upperStationTemp = upperStation && upperStation.airTempAvg;\n  const upperStationNewSnowLastDay = newSnow && newSnow.upperStationLastDay;\n  const upperStationNewSnowTwoDay = newSnow && newSnow.upperStationLastTwoDay;\n  const upperStationNewSnowLastWeek = newSnow && newSnow.upperStationLastWeek;\n  const upperStationSnowDepth = upperStation && upperStation.snowHeight;\n\n  useEffect(() => {\n    const lastTwoDayWindUpperStation = upperStationData.slice(0, 47);\n    const upperWindDirection = lastTwoDayWindUpperStation.map((day) => {\n      return day.windDirAvg;\n    })\n    const upperWindSpeed = lastTwoDayWindUpperStation.map((day) => {\n      return day.windSpeedAvg;\n    })\n    const lastTwoDayWindLowerStation = lowerStationData.slice(0, 47);\n\n    const lowerWindDirection = lastTwoDayWindLowerStation.map((day) => {\n      return day.windDirAvg;\n    })\n    const lowerWindSpeed = lastTwoDayWindLowerStation.map((day) => {\n      return day.windSpeedAvg;\n    })\n    setWind(\n      {\n        upperStation: {\n          upperStationWindDirection: upperWindDirection,\n          upperStationWindSpeed: upperWindSpeed,\n        },\n        lowerStation: {\n          lowerStationWindDirection: lowerWindDirection,\n          lowerStationWindSpeed: lowerWindSpeed,\n        }\n      })\n  }, [lowerStationData, upperStationData])\n  return (\n    <Container>\n      <div className=\"dashboard\">\n        <div className=\"snow-conditions\">\n          <SnowDetails\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation}\n            newSnowLastDayLower={lowerStationNewSnowLastDay}\n            newSnowLastTwoDayLower={lowerStationNewSnowLastTwoDay}\n            newSnowLastWeekLower={lowerStationNewSnowLastWeek}\n            snowDepthLower={lowerStationSnowDepth}\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation}\n            newSnowLastDayUpper={upperStationNewSnowLastDay}\n            newSnowLastTwoDayUpper={upperStationNewSnowTwoDay}\n            newSnowLastWeekUpper={upperStationNewSnowLastWeek}\n            snowDepthUpper={upperStationSnowDepth} />\n        </div>\n        <div className=\"title\">\n          <Title />\n        </div>\n        <div className=\"weather\">\n          <WeatherDetailsList\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation}\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation}\n            highTemp={upperStationTemp}\n            lowTemp={lowerStationTemp} />\n        </div>\n        <div className=\"wind-chart1\">\n          <WindChart\n            windLower={wind.lowerStation}\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation} />\n        </div>\n        <div className=\"wind-chart2\">\n          <WindChart\n            windUpper={wind.upperStation}\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation} />\n        </div>\n\n        <div className=\"snow-chart\">\n          <div className=\"card\">\n            <Chart data={historicSnowData.data} />\n          </div>\n        </div>\n      </div >\n    </Container >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { areaReducer } = state;\n  return areaReducer;\n};\nexport default connect(mapStateToProps)(Main);","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst StyledBurger = styled(\"button\")`\n    position: absolute;\n    top: 5%;\n    left: 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    width: 2rem;\n    height: 2rem;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    padding: 0;\n    z-index: 12;\n    &:focus {\n      outline: none;\n    }\n    div {\n      width: 2rem;\n    height: 0.25rem;\n    background: #EFFFFA;\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n \n    }\n`\n\nexport const Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { SET_CURRENT_AREA } from '../../actions/area-action';\nimport styled from \"@emotion/styled\";\n\nconst StyledMenu = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: grey;\n  opacity: 95%;\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  z-index: 11;\n\nh3 {\n  font-size: 2rem;\n  text-transform: uppercase;\n  padding: 2rem 0;\n  font-weight: bold;\n  letter-spacing: 0.5rem;\n  color: #fff;\n  transition: color 0.3s linear;\n  &:hover {\n    cursor: pointer;\n  }\n}\n`\n\nexport const Menu = ({ open, setCurrentArea }) => {\n  return (\n    <StyledMenu open={open}>\n      <h3>Select Area:</h3>\n      <h3 id=\"coquihalla\" title=\"coquihalla\" onClick={(e) => setCurrentArea(e.target.id)}>\n        Coquihalla\n      </h3>\n      <h3 id=\"duffey\" title=\"duffey\" onClick={(e) => setCurrentArea(e.target.id)}>\n        Duffey\n        </h3>\n      <h3 id=\"manning\" title=\"manning\" onClick={(e) => setCurrentArea(e.target.id)}>\n        Manning\n        </h3>\n    </StyledMenu>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentArea(id) {\n      dispatch({\n        type: SET_CURRENT_AREA,\n        payload: { id }\n      })\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Menu);\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport styled from \"@emotion/styled\";\nimport Main from './components/Main';\nimport img from './images/Thar_Peak.jpg';\nimport { Burger } from './components/Burger/Burger';\nimport Menu from './components/Menu/Menu';\n\nconst Container = styled(\"div\")`\nmargin: 0;\npadding: 0;\nbackground: url(${img}) no-repeat center center fixed;\nbackground-size: cover;\n`\nfunction App() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Container>\n      <Burger open={open} setOpen={setOpen} />\n      <Menu open={open} setOpen={setOpen} />\n      <Main />\n    </Container >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Thar_Peak.63b86186.jpg\";"],"sourceRoot":""}