{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nconst Wind = styled(\"div\")` \ndisplay: flex;\nposition: relative;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.locationArrow {\n  position: absolute;\n  margin-top: 140px;\n  transform: rotate(-45deg);\n}\n\n`;\nconst data = {\n  datasets: [{\n    labels: [\"Red\", \"Blue\"],\n    data: [0, 360],\n    backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"]\n  }]\n};\nconst options = {\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 80,\n  // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n\n        if (i === len) {\n          return null;\n        }\n\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n};\nexport const WindChart = ({\n  wind\n}) => {\n  const upperStationWindDirection = wind.upperStationWindDirection,\n        upperStationWindSpeed = wind.upperStationWindSpeed;\n  console.log(\"Speed\", upperStationWindSpeed);\n  console.log(\"Direction\", upperStationWindDirection);\n\n  const _useState = useState({\n    rotate: false,\n    degree: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        rotation = _useState2[0],\n        setRotation = _useState2[1];\n\n  const windDirectionLastTwoDays = (arr1, arr2) => {\n    for (let i = 0; i < arr1.length; i++) {\n      setTimeout(function timer() {\n        setRotation({\n          degree: arr1[i]\n        });\n        data.datasets[0].data = [arr2[i], 360];\n      }, i * 200);\n    }\n  };\n\n  return React.createElement(Wind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    className: \"locationArrow\",\n    transform: {\n      rotate: rotation.degree\n    },\n    size: \"3x\",\n    color: \"red\",\n    icon: faLocationArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => windDirectionLastTwoDays(upperStationWindDirection, upperStationWindSpeed),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"click\"));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js"],"names":["React","useState","useEffect","styled","Doughnut","FontAwesomeIcon","faLocationArrow","Wind","data","datasets","labels","backgroundColor","options","circumference","Math","PI","rotation","cutoutPercentage","plugins","datalabels","borderColor","align","anchor","offset","borderRadius","borderWidth","formatter","value","context","i","dataIndex","len","dataset","length","legend","display","tooltips","enabled","WindChart","wind","upperStationWindDirection","upperStationWindSpeed","console","log","rotate","degree","setRotation","windDirectionLastTwoDays","arr1","arr2","setTimeout","timer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nconst Wind = styled(\"div\")` \ndisplay: flex;\nposition: relative;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.locationArrow {\n  position: absolute;\n  margin-top: 140px;\n  transform: rotate(-45deg);\n}\n\n`\n\nconst data = {\n  datasets: [{\n    labels: [\"Red\", \"Blue\"],\n    data: [0, 360],\n    backgroundColor: [\n      \"rgb(255, 99, 132)\",\n      \"rgb(54, 162, 235)\",\n      \"rgb(255, 205, 86)\"\n    ]\n  }]\n}\n\nconst options = {\n\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 80, // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n        if (i === len) {\n          return null;\n        }\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n}\n\nexport const WindChart = ({ wind }) => {\n  const { upperStationWindDirection, upperStationWindSpeed } = wind;\n  console.log(\"Speed\", upperStationWindSpeed)\n  console.log(\"Direction\", upperStationWindDirection)\n\n  const [rotation, setRotation] = useState({\n    rotate: false,\n    degree: 0\n  });\n\n  const windDirectionLastTwoDays = (arr1, arr2) => {\n    for (let i = 0; i < arr1.length; i++) {\n      setTimeout(function timer() {\n        setRotation({\n          degree: arr1[i],\n        })\n        data.datasets[0].data = [arr2[i], 360]\n      }, i * 200);\n    }\n  }\n\n\n  return (\n    <Wind>\n      <Doughnut data={data} options={options} />\n      <FontAwesomeIcon className='locationArrow' transform={{ rotate: rotation.degree }} size='3x' color='red' icon={faLocationArrow} />\n      <button onClick={() => windDirectionLastTwoDays(upperStationWindDirection, upperStationWindSpeed)}>click</button>\n    </Wind >\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}