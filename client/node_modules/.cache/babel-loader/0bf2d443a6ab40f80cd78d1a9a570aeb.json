{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js\";\nimport React, { useState, useEffect } from 'react';\nexport const useDropDown = (label, defaultState, options) => {\n  const _useState = useState(defaultState),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const id = ``;\n  useEffect(() => {\n    setWeatherData({\n      stationsList: data\n    });\n  }, []);\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"station\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Weather Station\", React.createElement(\"select\", {\n    id: \"station\",\n    value: weatherStation,\n    onChange: e => setWeatherStation(e.target.value),\n    onBlur: e => setWeatherStation(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Select Station...\"), weatherData.stationsList.map(station => React.createElement(\"option\", {\n    key: station.station.id,\n    value: station.station.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, station.station.name)))), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js"],"names":["React","useState","useEffect","useDropDown","label","defaultState","options","state","setState","id","setWeatherData","stationsList","data","weatherStation","e","setWeatherStation","target","value","weatherData","map","station","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,OAAtB,KAAkC;AAAA,oBACjCL,QAAQ,CAACI,YAAD,CADyB;AAAA;AAAA,QACpDE,KADoD;AAAA,QAC7CC,QAD6C;;AAE3D,QAAMC,EAAE,GAAI,EAAZ;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc,CAAC;AAAEC,MAAAA,YAAY,EAAEC;AAAhB,KAAD,CAAd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,KAAK,EAAEC,cAFT;AAGE,IAAA,QAAQ,EAAEC,CAAC,IAAIC,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAHlC;AAIE,IAAA,MAAM,EAAEH,CAAC,IAAIC,iBAAiB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAMGC,WAAW,CAACP,YAAZ,CAAyBQ,GAAzB,CAA6BC,OAAO,IACnC;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACA,OAAR,CAAgBX,EAA7B;AAAiC,IAAA,KAAK,EAAEW,OAAO,CAACA,OAAR,CAAgBC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,OAAO,CAACA,OAAR,CAAgBC,IAFnB,CADD,CANH,CAFF,CADF,EAiBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD,CA5BM","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const useDropDown = (label, defaultState, options) => {\n  const [state, setState] = useState(defaultState);\n  const id = ``\n  useEffect(() => {\n    setWeatherData({ stationsList: data })\n  }, []);\n\n  return (\n    <form>\n      <label htmlFor=\"station\">\n        Weather Station\n        <select\n          id=\"station\"\n          value={weatherStation}\n          onChange={e => setWeatherStation(e.target.value)}\n          onBlur={e => setWeatherStation(e.target.value)}>\n          <option>Select Station...</option>\n          {weatherData.stationsList.map(station => (\n            <option key={station.station.id} value={station.station.name}\n            >\n              {station.station.name}\n            </option>\n          ))}\n        </select>\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  )\n}"]},"metadata":{},"sourceType":"module"}