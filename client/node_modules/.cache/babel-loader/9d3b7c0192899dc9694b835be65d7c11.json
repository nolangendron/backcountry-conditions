{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Main.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"@emotion/styled\";\nimport size from \"../styles/size\";\nimport colors from '../styles/colors';\nimport { WeatherDetailsList } from './WeatherDetailsList';\nimport { SnowDetails } from './SnowDetails';\nimport { calNewSnowLastDay } from '../utils/calNewSnowLastDay';\nimport { Chart } from '../components/Chart';\nimport { data } from '../data/index';\nconst littleBearData = data.littleBearData,\n      coqSummitData = data.coqSummitData;\nconst Container = styled(\"main\")`\n    flex: 1;\n    grid-area: main;\n    padding: ${size.spacing};\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n    background-color: ${colors.main};\n\n    .dashboard {\n      --column-count: 3;\n      display: grid;\n      grid-template-columns: repeat(var(--column-count), 1fr);\n      grid-gap: ${size.spacing};\n    }\n\n    .column-item {\n      --column-count: 3;\n      flex-basis: calc(100%/var(--column-count));\n      grid-column-end: span 1;\n    }\n\n    .item-column {\n      flex: 1 1 50%;\n      grid-column-end: span 1;\n      padding: calc(var(${size.spacing}) / 2);\n      border: 1px solid grey;\n    }\n\n    .item-half {\n      flex: 1 1 50%;\n      height: 270px;\n      grid-column-end: span 2;\n      padding: calc(var(${size.spacing}) / 2);\n      border: 1px solid grey;\n    }\n\n    .item-full {\n      flex-basis: 100%;\n      grid-column: 1 / -1;\n    }\n`;\n\nconst mapStateToProps = state => {\n  return state.a;\n};\n\nconst Main = props => {\n  const areaReducer = props.areaReducer; // const [lowerStationData, setLowerStationData] = useState([]);\n  // const [upperStationData, setUpperStationData] = useState([]);\n  // const [newSnow, setNewSnow] = useState({\n  //   lowerStationLastDay: null,\n  //   lowerStationLastTwoDay: null,\n  //   lowerStationLastWeek: null,\n  //   upperStationLastDay: null,\n  //   upperStationLastTwoDay: null,\n  //   upperStationLastWeek: null,\n  // });\n  // const [historicSnowData, setHistoricSnowData] = useState(\n  //   {\n  //     data: {\n  //       labels: [],\n  //       datasets: [\n  //         { label: \"\", fill: false, backgroundColor: \"\", data: [] },\n  //         { label: \"\", fill: false, backgroundColor: \"\", data: [] }\n  //       ]\n  //     }\n  //   }\n  // )\n\n  useEffect(() => {\n    const getWeather = async station => {\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLowerStationData(data);\n    };\n\n    getWeather(15);\n  }, []);\n  useEffect(() => {\n    const getWeather = async station => {\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setUpperStationData(data);\n    };\n\n    getWeather(17);\n  }, []);\n  useEffect(() => {\n    const lastDaySnowLowerStation = lowerStationData.slice(0, 23);\n    const newSnowLowerStation = lastDaySnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastDaySnowUpperStation = upperStationData.slice(0, 23);\n    const newSnowUpperStation = lastDaySnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastTwoDaySnowLowerStation = lowerStationData.slice(0, 47);\n    const newTwoDaySnowLowerStation = lastTwoDaySnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastTwoDaySnowUpperStation = upperStationData.slice(0, 47);\n    const newTwoDaySnowUpperStation = lastTwoDaySnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastWeekSnowLowerStation = lowerStationData.slice(0, 160);\n    const newLastWeekSnowLowerStation = lastWeekSnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastWeekSnowUpperStation = upperStationData.slice(0, 160);\n    const newLastWeekSnowUpperStation = lastWeekSnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const getNewSnowLowerStation = calNewSnowLastDay(newSnowLowerStation);\n    const getNewSnowUpperStation = calNewSnowLastDay(newSnowUpperStation);\n    const getNewTwoSnowLowerStation = calNewSnowLastDay(newTwoDaySnowLowerStation);\n    const getNewTwoSnowUpperStation = calNewSnowLastDay(newTwoDaySnowUpperStation);\n    const getNewLastWeekSnowLowerStation = calNewSnowLastDay(newLastWeekSnowLowerStation);\n    const getNewLastWeekSnowUpperStation = calNewSnowLastDay(newLastWeekSnowUpperStation);\n    const sumNewSnowLowerStation = getNewSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewSnowUpperStation = getNewSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowLowerStation = getNewTwoSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowUpperStation = getNewTwoSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowLowerStation = getNewLastWeekSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowUpperStation = getNewLastWeekSnowUpperStation.reduce((a, b) => a + b, 0);\n    setNewSnow({\n      lowerStationLastDay: sumNewSnowLowerStation,\n      lowerStationLastTwoDay: sumNewTwoDaySnowLowerStation,\n      lowerStationLastWeek: sumNewLastWeekSnowLowerStation,\n      upperStationLastDay: sumNewSnowUpperStation,\n      upperStationLastTwoDay: sumNewTwoDaySnowUpperStation,\n      upperStationLastWeek: sumNewLastWeekSnowUpperStation\n    });\n  }, []);\n  useEffect(() => {\n    const getSnowPackData = arr => {\n      const dataArray = [];\n      const dateArray = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10));\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n\n      return {\n        dataArray,\n        dateArray\n      };\n    };\n\n    const upperSnowData = getSnowPackData(littleBearData);\n    const lowerSnowData = getSnowPackData(coqSummitData);\n    setHistoricSnowData({\n      data: {\n        labels: lowerSnowData.dateArray,\n        datasets: [{\n          label: \"1220m\",\n          backgroundColor: \"#50D8D7\",\n          data: lowerSnowData.dataArray\n        }, {\n          label: \"1660m\",\n          backgroundColor: \"#547AA5\",\n          data: upperSnowData.dataArray\n        }]\n      }\n    });\n  }, []);\n  const lowerStationName = \"Coquihalla Summit\";\n  const lowerStationElevation = \"1230m\";\n  const lowerStation = lowerStationData && lowerStationData[0];\n  const lowerStationTemp = lowerStation && lowerStation.airTempAvg;\n  const lowerStationNewSnowLastDay = newSnow && newSnow.lowerStationLastDay;\n  const lowerStationNewSnowLastTwoDay = newSnow && newSnow.lowerStationLastTwoDay;\n  const lowerStationNewSnowLastWeek = newSnow && newSnow.lowerStationLastWeek;\n  const lowerStationSnowDepth = lowerStation && lowerStation.snowHeight;\n  const upperStationName = \"Little Bear\";\n  const upperStationElevation = \"1660m\";\n  const upperStation = upperStationData && upperStationData[0];\n  const upperStationTemp = upperStation && upperStation.airTempAvg;\n  const upperStationNewSnowLastDay = newSnow && newSnow.upperStationLastDay;\n  const upperStationNewSnowTwoDay = newSnow && newSnow.upperStationLastTwoDay;\n  const upperStationNewSnowLastWeek = newSnow && newSnow.upperStationLastWeek;\n  const upperStationSnowDepth = upperStation && upperStation.snowHeight;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(WeatherDetailsList, {\n    highElevationName: upperStationName.toUpperCase(),\n    highElevation: upperStationElevation,\n    lowElevationName: lowerStationName.toUpperCase(),\n    lowElevation: lowerStationElevation,\n    highTemp: upperStationTemp,\n    lowTemp: lowerStationTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(SnowDetails, {\n    lowElevationName: lowerStationName,\n    lowElevation: lowerStationElevation,\n    newSnowLastDayLower: lowerStationNewSnowLastDay,\n    newSnowLastTwoDayLower: lowerStationNewSnowLastTwoDay,\n    newSnowLastWeekLower: lowerStationNewSnowLastWeek,\n    snowDepthLower: lowerStationSnowDepth,\n    highElevationName: upperStationName,\n    highElevation: upperStationElevation,\n    newSnowLastDayUpper: upperStationNewSnowLastDay,\n    newSnowLastTwoDayUpper: upperStationNewSnowTwoDay,\n    newSnowLastWeekUpper: upperStationNewSnowLastWeek,\n    snowDepthUpper: upperStationSnowDepth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: historicSnowData.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  })))));\n};\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Main.js"],"names":["React","useEffect","useState","connect","styled","size","colors","WeatherDetailsList","SnowDetails","calNewSnowLastDay","Chart","data","littleBearData","coqSummitData","Container","spacing","main","mapStateToProps","state","a","Main","props","areaReducer","getWeather","station","url","response","fetch","json","setLowerStationData","setUpperStationData","lastDaySnowLowerStation","lowerStationData","slice","newSnowLowerStation","map","day","snowHeight","lastDaySnowUpperStation","upperStationData","newSnowUpperStation","lastTwoDaySnowLowerStation","newTwoDaySnowLowerStation","lastTwoDaySnowUpperStation","newTwoDaySnowUpperStation","lastWeekSnowLowerStation","newLastWeekSnowLowerStation","lastWeekSnowUpperStation","newLastWeekSnowUpperStation","getNewSnowLowerStation","getNewSnowUpperStation","getNewTwoSnowLowerStation","getNewTwoSnowUpperStation","getNewLastWeekSnowLowerStation","getNewLastWeekSnowUpperStation","sumNewSnowLowerStation","reduce","b","sumNewSnowUpperStation","sumNewTwoDaySnowLowerStation","sumNewTwoDaySnowUpperStation","sumNewLastWeekSnowLowerStation","sumNewLastWeekSnowUpperStation","setNewSnow","lowerStationLastDay","lowerStationLastTwoDay","lowerStationLastWeek","upperStationLastDay","upperStationLastTwoDay","upperStationLastWeek","getSnowPackData","arr","dataArray","dateArray","i","length","date","charAt","push","snowpack","upperSnowData","lowerSnowData","setHistoricSnowData","labels","datasets","label","backgroundColor","lowerStationName","lowerStationElevation","lowerStation","lowerStationTemp","airTempAvg","lowerStationNewSnowLastDay","newSnow","lowerStationNewSnowLastTwoDay","lowerStationNewSnowLastWeek","lowerStationSnowDepth","upperStationName","upperStationElevation","upperStation","upperStationTemp","upperStationNewSnowLastDay","upperStationNewSnowTwoDay","upperStationNewSnowLastWeek","upperStationSnowDepth","toUpperCase","historicSnowData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"@emotion/styled\";\nimport size from \"../styles/size\";\nimport colors from '../styles/colors';\nimport { WeatherDetailsList } from './WeatherDetailsList';\nimport { SnowDetails } from './SnowDetails';\nimport { calNewSnowLastDay } from '../utils/calNewSnowLastDay';\nimport { Chart } from '../components/Chart';\nimport { data } from '../data/index';\nconst { littleBearData, coqSummitData } = data;\n\nconst Container = styled(\"main\")`\n    flex: 1;\n    grid-area: main;\n    padding: ${size.spacing};\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n    background-color: ${colors.main};\n\n    .dashboard {\n      --column-count: 3;\n      display: grid;\n      grid-template-columns: repeat(var(--column-count), 1fr);\n      grid-gap: ${size.spacing};\n    }\n\n    .column-item {\n      --column-count: 3;\n      flex-basis: calc(100%/var(--column-count));\n      grid-column-end: span 1;\n    }\n\n    .item-column {\n      flex: 1 1 50%;\n      grid-column-end: span 1;\n      padding: calc(var(${size.spacing}) / 2);\n      border: 1px solid grey;\n    }\n\n    .item-half {\n      flex: 1 1 50%;\n      height: 270px;\n      grid-column-end: span 2;\n      padding: calc(var(${size.spacing}) / 2);\n      border: 1px solid grey;\n    }\n\n    .item-full {\n      flex-basis: 100%;\n      grid-column: 1 / -1;\n    }\n`\nconst mapStateToProps = (state) => {\n  return state.a\n}\nconst Main = (props) => {\n  const { areaReducer } = props;\n  // const [lowerStationData, setLowerStationData] = useState([]);\n  // const [upperStationData, setUpperStationData] = useState([]);\n  // const [newSnow, setNewSnow] = useState({\n  //   lowerStationLastDay: null,\n  //   lowerStationLastTwoDay: null,\n  //   lowerStationLastWeek: null,\n  //   upperStationLastDay: null,\n  //   upperStationLastTwoDay: null,\n  //   upperStationLastWeek: null,\n  // });\n  // const [historicSnowData, setHistoricSnowData] = useState(\n  //   {\n  //     data: {\n  //       labels: [],\n  //       datasets: [\n  //         { label: \"\", fill: false, backgroundColor: \"\", data: [] },\n  //         { label: \"\", fill: false, backgroundColor: \"\", data: [] }\n  //       ]\n  //     }\n  //   }\n  // )\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLowerStationData(data);\n    }\n    getWeather(15);\n\n  }, [])\n\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setUpperStationData(data)\n    }\n    getWeather(17);\n  }, [])\n\n  useEffect(() => {\n    const lastDaySnowLowerStation = lowerStationData.slice(0, 23);\n    const newSnowLowerStation = lastDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastDaySnowUpperStation = upperStationData.slice(0, 23);\n    const newSnowUpperStation = lastDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowLowerStation = lowerStationData.slice(0, 47);\n    const newTwoDaySnowLowerStation = lastTwoDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowUpperStation = upperStationData.slice(0, 47);\n    const newTwoDaySnowUpperStation = lastTwoDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowLowerStation = lowerStationData.slice(0, 160);\n    const newLastWeekSnowLowerStation = lastWeekSnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowUpperStation = upperStationData.slice(0, 160);\n    const newLastWeekSnowUpperStation = lastWeekSnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n\n    const getNewSnowLowerStation = calNewSnowLastDay(newSnowLowerStation);\n    const getNewSnowUpperStation = calNewSnowLastDay(newSnowUpperStation);\n    const getNewTwoSnowLowerStation = calNewSnowLastDay(newTwoDaySnowLowerStation);\n    const getNewTwoSnowUpperStation = calNewSnowLastDay(newTwoDaySnowUpperStation);\n    const getNewLastWeekSnowLowerStation = calNewSnowLastDay(newLastWeekSnowLowerStation);\n    const getNewLastWeekSnowUpperStation = calNewSnowLastDay(newLastWeekSnowUpperStation);\n    const sumNewSnowLowerStation = getNewSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewSnowUpperStation = getNewSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowLowerStation = getNewTwoSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowUpperStation = getNewTwoSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowLowerStation = getNewLastWeekSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowUpperStation = getNewLastWeekSnowUpperStation.reduce((a, b) => a + b, 0);\n\n    setNewSnow({\n      lowerStationLastDay: sumNewSnowLowerStation,\n      lowerStationLastTwoDay: sumNewTwoDaySnowLowerStation,\n      lowerStationLastWeek: sumNewLastWeekSnowLowerStation,\n      upperStationLastDay: sumNewSnowUpperStation,\n      upperStationLastTwoDay: sumNewTwoDaySnowUpperStation,\n      upperStationLastWeek: sumNewLastWeekSnowUpperStation\n    });\n  }, [])\n\n  useEffect(() => {\n    const getSnowPackData = (arr) => {\n      const dataArray = [];\n      const dateArray = [];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10))\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n      return { dataArray, dateArray };\n    };\n    const upperSnowData = getSnowPackData(littleBearData);\n    const lowerSnowData = getSnowPackData(coqSummitData);\n    setHistoricSnowData({\n      data: {\n        labels: lowerSnowData.dateArray,\n        datasets: [\n          {\n            label: \"1220m\",\n            backgroundColor: \"#50D8D7\",\n            data: lowerSnowData.dataArray\n          },\n          {\n            label: \"1660m\",\n            backgroundColor: \"#547AA5\",\n            data: upperSnowData.dataArray\n          }]\n      }\n    })\n  }, [])\n\n  const lowerStationName = \"Coquihalla Summit\";\n  const lowerStationElevation = \"1230m\"\n  const lowerStation = lowerStationData && lowerStationData[0];\n  const lowerStationTemp = lowerStation && lowerStation.airTempAvg;\n  const lowerStationNewSnowLastDay = newSnow && newSnow.lowerStationLastDay;\n  const lowerStationNewSnowLastTwoDay = newSnow && newSnow.lowerStationLastTwoDay;\n  const lowerStationNewSnowLastWeek = newSnow && newSnow.lowerStationLastWeek;\n  const lowerStationSnowDepth = lowerStation && lowerStation.snowHeight;\n\n  const upperStationName = \"Little Bear\";\n  const upperStationElevation = \"1660m\"\n  const upperStation = upperStationData && upperStationData[0];\n  const upperStationTemp = upperStation && upperStation.airTempAvg;\n  const upperStationNewSnowLastDay = newSnow && newSnow.upperStationLastDay;\n  const upperStationNewSnowTwoDay = newSnow && newSnow.upperStationLastTwoDay;\n  const upperStationNewSnowLastWeek = newSnow && newSnow.upperStationLastWeek;\n  const upperStationSnowDepth = upperStation && upperStation.snowHeight;\n\n  return (\n    <Container>\n      <div className=\"dashboard\">\n        <div className=\"item-column\">\n          {/* <div className=\"card\"> */}\n          <WeatherDetailsList\n            highElevationName={upperStationName.toUpperCase()}\n            highElevation={upperStationElevation}\n            lowElevationName={lowerStationName.toUpperCase()}\n            lowElevation={lowerStationElevation}\n            highTemp={upperStationTemp}\n            lowTemp={lowerStationTemp} />\n        </div>\n        <div className=\"item-half\">\n          <SnowDetails\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation}\n            newSnowLastDayLower={lowerStationNewSnowLastDay}\n            newSnowLastTwoDayLower={lowerStationNewSnowLastTwoDay}\n            newSnowLastWeekLower={lowerStationNewSnowLastWeek}\n            snowDepthLower={lowerStationSnowDepth}\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation}\n            newSnowLastDayUpper={upperStationNewSnowLastDay}\n            newSnowLastTwoDayUpper={upperStationNewSnowTwoDay}\n            newSnowLastWeekUpper={upperStationNewSnowLastWeek}\n            snowDepthUpper={upperStationSnowDepth} />\n        </div>\n        <div className=\"item-full\">\n          <div className=\"card\">\n            <Chart data={historicSnowData.data} />\n          </div>\n        </div>\n      </div >\n    </Container >\n  )\n}\n\nexport default connect(mapStateToProps)(Main);"]},"metadata":{},"sourceType":"module"}