{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nconst Wind = styled(\"div\")` \ndisplay: flex;\nposition: relative;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.locationArrow {\n  position: absolute;\n  margin-top: 140px;\n  transform: rotate(-45deg);\n}\n\n`;\nconst data = {\n  labels: [\"Red\", \"Blue\"],\n  datasets: [{\n    label: \"Gauge\",\n    data: [155, 360],\n    backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"]\n  }]\n};\nconst options = {\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 70,\n  // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      color: function (context) {\n        return context.dataset.backgroundColor;\n      },\n      font: function (context) {\n        var w = context.chart.width;\n        return {\n          size: w < 512 ? 18 : 20\n        };\n      },\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n\n        if (i === len) {\n          return null;\n        }\n\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n};\nexport const WindChart = ({\n  windDirection\n}) => {\n  const _useState = useState({\n    rotate: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        rotation = _useState2[0],\n        setRotation = _useState2[1];\n\n  return React.createElement(Wind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(FontAwesomeIcon, {\n    icon: faLocationArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js"],"names":["React","useEffect","useState","styled","Doughnut","FontAwesomeIcon","faLocationArrow","Wind","data","labels","datasets","label","backgroundColor","options","circumference","Math","PI","rotation","cutoutPercentage","plugins","datalabels","borderColor","color","context","dataset","font","w","chart","width","size","align","anchor","offset","borderRadius","borderWidth","formatter","value","i","dataIndex","len","length","legend","display","tooltips","enabled","WindChart","windDirection","rotate","setRotation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAAC,KAAD,CAAQ;;;;;;;;;;;;;;;;;CAA3B;AAmBA,MAAMK,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,CADG;AAEXC,EAAAA,QAAQ,EAAE,CAAC;AACTC,IAAAA,KAAK,EAAE,OADE;AAETH,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CAFG;AAGTI,IAAAA,eAAe,EAAE,CACf,mBADe,EAEf,mBAFe,EAGf,mBAHe;AAHR,GAAD;AAFC,CAAb;AAaA,MAAMC,OAAO,GAAG;AAEdC,EAAAA,aAAa,EAAEC,IAAI,CAACC,EAAL,GAAU,CAFX;AAGdC,EAAAA,QAAQ,EAAEF,IAAI,CAACC,EAHD;AAIdE,EAAAA,gBAAgB,EAAE,EAJJ;AAIQ;AACtBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AACVR,MAAAA,eAAe,EAAE,oBADP;AAEVS,MAAAA,WAAW,EAAE,SAFH;AAGVC,MAAAA,KAAK,EAAE,UAAUC,OAAV,EAAmB;AACxB,eAAOA,OAAO,CAACC,OAAR,CAAgBZ,eAAvB;AACD,OALS;AAMVa,MAAAA,IAAI,EAAE,UAAUF,OAAV,EAAmB;AACvB,YAAIG,CAAC,GAAGH,OAAO,CAACI,KAAR,CAAcC,KAAtB;AACA,eAAO;AACLC,UAAAA,IAAI,EAAEH,CAAC,GAAG,GAAJ,GAAU,EAAV,GAAe;AADhB,SAAP;AAGD,OAXS;AAYVI,MAAAA,KAAK,EAAE,OAZG;AAaVC,MAAAA,MAAM,EAAE,OAbE;AAcVC,MAAAA,MAAM,EAAE,EAdE;AAeVC,MAAAA,YAAY,EAAE,CAfJ;AAgBVC,MAAAA,WAAW,EAAE,CAhBH;AAiBVC,MAAAA,SAAS,EAAE,UAAUC,KAAV,EAAiBb,OAAjB,EAA0B;AACnC,YAAIc,CAAC,GAAGd,OAAO,CAACe,SAAhB;AACA,YAAIC,GAAG,GAAGhB,OAAO,CAACC,OAAR,CAAgBhB,IAAhB,CAAqBgC,MAArB,GAA8B,CAAxC;;AACA,YAAIH,CAAC,KAAKE,GAAV,EAAe;AACb,iBAAO,IAAP;AACD;;AACD,eAAOH,KAAK,GAAG,MAAf;AACD;AAxBS;AADL,GALK;AAiCdK,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAjCM;AAoCdC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD;AApCI,CAAhB;AAyCA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA,oBACd5C,QAAQ,CAAC;AACvC6C,IAAAA,MAAM,EAAE;AAD+B,GAAD,CADM;AAAA;AAAA,QACvC9B,QADuC;AAAA,QAC7B+B,WAD6B;;AAK9C,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAExC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEF,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAXM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\n\nconst Wind = styled(\"div\")` \ndisplay: flex;\nposition: relative;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: center;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n\n.locationArrow {\n  position: absolute;\n  margin-top: 140px;\n  transform: rotate(-45deg);\n}\n\n`\n\nconst data = {\n  labels: [\"Red\", \"Blue\"],\n  datasets: [{\n    label: \"Gauge\",\n    data: [155, 360],\n    backgroundColor: [\n      \"rgb(255, 99, 132)\",\n      \"rgb(54, 162, 235)\",\n      \"rgb(255, 205, 86)\"\n    ]\n  }]\n}\n\nconst options = {\n\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 70, // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      color: function (context) {\n        return context.dataset.backgroundColor;\n      },\n      font: function (context) {\n        var w = context.chart.width;\n        return {\n          size: w < 512 ? 18 : 20\n        }\n      },\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n        if (i === len) {\n          return null;\n        }\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n}\n\nexport const WindChart = ({ windDirection }) => {\n  const [rotation, setRotation] = useState({\n    rotate: false,\n  });\n\n  return (\n    <Wind>\n      <Doughnut data={data} />\n      <FontAwesomeIcon icon={faLocationArrow}/>\n    </Wind>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}