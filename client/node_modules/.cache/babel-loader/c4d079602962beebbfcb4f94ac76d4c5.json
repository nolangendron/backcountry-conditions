{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Chart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport littleBearData from '../data/littleBearData.json';\nimport coqSummitData from '../data/coqSummitData.json';\nexport const Chart = () => {\n  const _useState = useState({\n    labels: [],\n    datasets: [{\n      label: \"1660m\",\n      fill: false,\n      data: []\n    }, {\n      label: \"1220m\",\n      fill: false,\n      data: []\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        snowData = _useState2[0],\n        setSnowData = _useState2[1];\n\n  useEffect(() => {\n    const getSnowPackData = arr => {\n      const dataArray = [];\n      const dateArray = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10));\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n\n      return {\n        dataArray,\n        dateArray\n      };\n    };\n\n    const littleBearSnowData = getSnowPackData(littleBearData);\n    const coqSummitSnowData = getSnowPackData(coqSummitData);\n    console.log(littleBearData);\n    console.log(coqSummitSnowData);\n    setSnowData({\n      labels: littleBearSnowData.dateArray,\n      datasets: [{\n        data: littleBearSnowData.dataArray\n      }, {\n        data: coqSummitSnowData.dataArray\n      }]\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: snowData,\n    options: {\n      title: {\n        display: true,\n        text: \"Snow Depth for the Coquihalla Area\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Chart.js"],"names":["React","useEffect","useState","Line","littleBearData","coqSummitData","Chart","labels","datasets","label","fill","data","snowData","setSnowData","getSnowPackData","arr","dataArray","dateArray","i","length","date","charAt","push","slice","snowpack","littleBearSnowData","coqSummitSnowData","console","log","title","display","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACOJ,QAAQ,CAAC;AACvCK,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,QAAQ,EAAE,CACR;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE,KAAxB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,KADQ,EAER;AAAEF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE,KAAxB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,KAFQ;AAF6B,GAAD,CADf;AAAA;AAAA,QAClBC,QADkB;AAAA,QACRC,WADQ;;AAQzBZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAIC,GAAD,IAAS;AAE/B,YAAMC,SAAS,GAAG,EAAlB;AACA,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAIH,GAAG,CAACG,CAAD,CAAH,CAAOE,IAAP,CAAYC,MAAZ,CAAmB,EAAnB,MAA2B,GAA3B,IAAkCN,GAAG,CAACG,CAAD,CAAH,CAAOE,IAAP,CAAYC,MAAZ,CAAmB,EAAnB,MAA2B,GAAjE,EAAsE;AACpEJ,UAAAA,SAAS,CAACK,IAAV,CAAeP,GAAG,CAACG,CAAD,CAAH,CAAOE,IAAP,CAAYG,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAf;AACAP,UAAAA,SAAS,CAACM,IAAV,CAAeP,GAAG,CAACG,CAAD,CAAH,CAAOM,QAAtB;AACD;AACF;;AACD,aAAO;AAAER,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAAP;AACD,KAXD;;AAYA,UAAMQ,kBAAkB,GAAGX,eAAe,CAACV,cAAD,CAA1C;AACA,UAAMsB,iBAAiB,GAAGZ,eAAe,CAACT,aAAD,CAAzC;AACJsB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,cAAZ;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAEIb,IAAAA,WAAW,CAAC;AACVN,MAAAA,MAAM,EAAEkB,kBAAkB,CAACR,SADjB;AAEVT,MAAAA,QAAQ,EAAE,CAAC;AAAEG,QAAAA,IAAI,EAAEc,kBAAkB,CAACT;AAA3B,OAAD,EACV;AAAEL,QAAAA,IAAI,EAAEe,iBAAiB,CAACV;AAA1B,OADU;AAFA,KAAD,CAAX;AAMD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEJ,QADR;AAEE,IAAA,OAAO,EAAE;AACPiB,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE;AAFD;AADA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CA/CM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport littleBearData from '../data/littleBearData.json';\nimport coqSummitData from '../data/coqSummitData.json';\n\nexport const Chart = () => {\n  const [snowData, setSnowData] = useState({\n    labels: [],\n    datasets: [\n      { label: \"1660m\", fill: false, data: [] },\n      { label: \"1220m\", fill: false, data: [] }\n    ]\n  })\n  useEffect(() => {\n    const getSnowPackData = (arr) => {\n\n      const dataArray = [];\n      const dateArray = [];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10))\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n      return { dataArray, dateArray };\n    };\n    const littleBearSnowData = getSnowPackData(littleBearData);\n    const coqSummitSnowData = getSnowPackData(coqSummitData);\nconsole.log(littleBearData)\nconsole.log(coqSummitSnowData)\n\n    setSnowData({\n      labels: littleBearSnowData.dateArray,\n      datasets: [{ data: littleBearSnowData.dataArray },\n      { data: coqSummitSnowData.dataArray }\n      ]\n    })\n  }, [])\n\n  return (\n    <div className=\"chart\">\n      <Line\n        data={snowData}\n        options={{\n          title: {\n            display: true,\n            text: \"Snow Depth for the Coquihalla Area\"\n          }\n        }\n        } />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}