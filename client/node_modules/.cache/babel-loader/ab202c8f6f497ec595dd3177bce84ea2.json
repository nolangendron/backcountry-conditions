{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/CurrentWeather.js\";\nimport React, { useState, useEffect } from 'react';\nexport const CurrentWeather = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        coqSummitStationData = _useState2[0],\n        setCoqSummitStationData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        littleBearStationData = _useState4[0],\n        setLittleBearStationData = _useState4[1];\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://wx.avalanche.ca/stations/15/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setCoqSummitStationData(data);\n    };\n\n    getWeather();\n  }, []);\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://wx.avalanche.ca/stations/17/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLittleBearStationData(data);\n    };\n\n    getWeather();\n  }, []);\n  const coqSummitStation = coqSummitStationData && coqSummitStationData[1];\n  const coqSummitTemp = coqSummitStation && coqSummitStation.airTempAvg;\n  const coqSummitSnowDepth = coqSummitStation && coqSummitStation.snowHeight;\n  const littleBearStation = littleBearStationData && littleBearStationData[1];\n  const littleBearTemp = littleBearStation && littleBearStation.airTempAvg;\n  const littleBearSnowDepth = littleBearStation && littleBearStation.snowHeight;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, stationName), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Elevation: \", stationElevation, \" m\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Current Temp: \", slicedAirTemp, \" \", String.fromCharCode(176), \"C\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Snow Fall: \", stationSnowFall), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Snow Depth: \", stationSnowDepth)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Little Bear\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Elevation: 1660 m\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Current Temp: \", littleBearTemp, \" \", String.fromCharCode(176), \"C\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Snow Fall: \", stationSnowFall), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Snow Depth: \", littleBearSnowDepth, \" cm\")));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/CurrentWeather.js"],"names":["React","useState","useEffect","CurrentWeather","coqSummitStationData","setCoqSummitStationData","littleBearStationData","setLittleBearStationData","getWeather","url","response","fetch","data","json","coqSummitStation","coqSummitTemp","airTempAvg","coqSummitSnowDepth","snowHeight","littleBearStation","littleBearTemp","littleBearSnowDepth","stationName","stationElevation","slicedAirTemp","String","fromCharCode","stationSnowFall","stationSnowDepth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA,oBACsBF,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,QAC3BG,oBAD2B;AAAA,QACLC,uBADK;;AAAA,qBAEwBJ,QAAQ,CAAC,EAAD,CAFhC;AAAA;AAAA,QAE3BK,qBAF2B;AAAA,QAEJC,wBAFI;;AAIlCL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAE7B,YAAMC,GAAG,GAAI,mDAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAR,MAAAA,uBAAuB,CAACO,IAAD,CAAvB;AACD,KAND;;AAOAJ,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAWAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,UAAU,GAAG,YAAY;AAE7B,YAAMC,GAAG,GAAI,mDAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,wBAAwB,CAACK,IAAD,CAAxB;AACD,KAND;;AAOAJ,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAWA,QAAMM,gBAAgB,GAAGV,oBAAoB,IAAIA,oBAAoB,CAAC,CAAD,CAArE;AACA,QAAMW,aAAa,GAAGD,gBAAgB,IAAIA,gBAAgB,CAACE,UAA3D;AACA,QAAMC,kBAAkB,GAAGH,gBAAgB,IAAIA,gBAAgB,CAACI,UAAhE;AAEA,QAAMC,iBAAiB,GAAGb,qBAAqB,IAAIA,qBAAqB,CAAC,CAAD,CAAxE;AACA,QAAMc,cAAc,GAAGD,iBAAiB,IAAIA,iBAAiB,CAACH,UAA9D;AACA,QAAMK,mBAAmB,GAAGF,iBAAiB,IAAIA,iBAAiB,CAACD,UAAnE;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,WAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBC,gBAAhB,OAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBC,aAAnB,OAAmCC,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAnC,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBC,eAAhB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBC,gBAAjB,CALF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBR,cAAnB,OAAoCK,MAAM,CAACC,YAAP,CAAoB,GAApB,CAApC,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBC,eAAhB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBN,mBAAjB,QALF,CARF,CADF;AAkBD,CApDM","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const CurrentWeather = () => {\n  const [coqSummitStationData, setCoqSummitStationData] = useState([]);\n  const [littleBearStationData, setLittleBearStationData] = useState([]);\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://wx.avalanche.ca/stations/15/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setCoqSummitStationData(data)\n    }\n    getWeather();\n  }, [])\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://wx.avalanche.ca/stations/17/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLittleBearStationData(data)\n    }\n    getWeather();\n  }, [])\n\n  const coqSummitStation = coqSummitStationData && coqSummitStationData[1];\n  const coqSummitTemp = coqSummitStation && coqSummitStation.airTempAvg;\n  const coqSummitSnowDepth = coqSummitStation && coqSummitStation.snowHeight;\n\n  const littleBearStation = littleBearStationData && littleBearStationData[1];\n  const littleBearTemp = littleBearStation && littleBearStation.airTempAvg;\n  const littleBearSnowDepth = littleBearStation && littleBearStation.snowHeight;\n\n  return (\n    <div>\n      <div>\n        <h2>{stationName}</h2>\n        <h2>Elevation: {stationElevation} m</h2>\n        <h2>Current Temp: {slicedAirTemp} {String.fromCharCode(176)}C</h2>\n        <h2>Snow Fall: {stationSnowFall}</h2>\n        <h2>Snow Depth: {stationSnowDepth}</h2>\n      </div>\n      <div>\n        <h2>Little Bear</h2>\n        <h2>Elevation: 1660 m</h2>\n        <h2>Current Temp: {littleBearTemp} {String.fromCharCode(176)}C</h2>\n        <h2>Snow Fall: {stationSnowFall}</h2>\n        <h2>Snow Depth: {littleBearSnowDepth} cm</h2>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}