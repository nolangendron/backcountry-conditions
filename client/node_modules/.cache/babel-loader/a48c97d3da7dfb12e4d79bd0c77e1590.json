{"ast":null,"code":"var _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\nconst Wind = styled(\"div\")` \ndisplay: flex;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n`;\nconst data = {\n  labels: [\"Red\", \"Blue\"],\n  datasets: [{\n    label: \"Gauge\",\n    data: [0, 360],\n    backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"]\n  }]\n};\nconst options = {\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 70,\n  // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      color: function (context) {\n        return context.dataset.backgroundColor;\n      },\n      font: function (context) {\n        var w = context.chart.width;\n        return {\n          size: w < 512 ? 18 : 20\n        };\n      },\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n\n        if (i === len) {\n          return null;\n        }\n\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n};\nexport const WindChart = () => {\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  function change_gauge(chart, label, data) {\n    chart.data.datasets.forEach(dataset => {\n      if (dataset.label == label) {\n        dataset.data = data;\n      }\n    });\n    chart.update();\n  }\n\n  return React.createElement(Wind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/WindChart.js"],"names":["React","styled","Doughnut","Wind","data","labels","datasets","label","backgroundColor","options","circumference","Math","PI","rotation","cutoutPercentage","plugins","datalabels","borderColor","color","context","dataset","font","w","chart","width","size","align","anchor","offset","borderRadius","borderWidth","formatter","value","i","dataIndex","len","length","legend","display","tooltips","enabled","WindChart","useEffect","effect","cleanup","input","change_gauge","forEach","update"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { Doughnut } from 'react-chartjs-2';\n\n\nconst Wind = styled(\"div\")` \ndisplay: flex;\nheight: 100%;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-around;\nalign-content: center;\nbackground: #fff;\nbox-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n`\n\nconst data = {\n  labels: [\"Red\", \"Blue\"],\n  datasets: [{\n    label: \"Gauge\",\n    data: [0, 360],\n    backgroundColor: [\n      \"rgb(255, 99, 132)\",\n      \"rgb(54, 162, 235)\",\n      \"rgb(255, 205, 86)\"\n    ]\n  }]\n}\n\nconst options = {\n\n  circumference: Math.PI * 2,\n  rotation: Math.PI,\n  cutoutPercentage: 70, // precent\n  plugins: {\n    datalabels: {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      borderColor: '#ffffff',\n      color: function (context) {\n        return context.dataset.backgroundColor;\n      },\n      font: function (context) {\n        var w = context.chart.width;\n        return {\n          size: w < 512 ? 18 : 20\n        }\n      },\n      align: 'start',\n      anchor: 'start',\n      offset: 10,\n      borderRadius: 4,\n      borderWidth: 1,\n      formatter: function (value, context) {\n        var i = context.dataIndex;\n        var len = context.dataset.data.length - 1;\n        if (i === len) {\n          return null;\n        }\n        return value + ' mph';\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  }\n}\nexport const WindChart = () => {\n  useEffect(() => {\n    effect\n    return () => {\n      cleanup\n    };\n  }, [input])\n  function change_gauge(chart, label, data) {\n    chart.data.datasets.forEach((dataset) => {\n      if (dataset.label == label) {\n        dataset.data = data;\n      }\n    });\n    chart.update();\n  }\n  return (\n    <Wind>\n      <Doughnut\n        data={data}\n        options={options} />\n    </Wind>\n  )\n}"]},"metadata":{},"sourceType":"module"}