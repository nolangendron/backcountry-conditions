{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Main.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"@emotion/styled\";\nimport size from \"../styles/size\";\nimport colors from '../styles/colors';\nimport { WeatherDetailsList } from './WeatherDetailsList';\nimport { SnowDetails } from './SnowDetails';\nimport { calNewSnowLastDay } from '../utils/calNewSnowLastDay';\nimport { Chart } from '../components/Chart';\nimport { stationNumbers } from '../data/weatherStationDetails';\nconst Container = styled(\"main\")`\n    flex: 1;\n    grid-area: main;\n    padding: ${size.spacing};\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n    background-color: ${colors.main};\n\n    .dashboard {\n      --column-count: 3;\n      display: grid;\n      grid-template-columns: repeat(var(--column-count), 1fr);\n      grid-gap: ${size.spacing};\n    }\n\n    .column-item {\n      --column-count: 3;\n      flex-basis: calc(100%/var(--column-count));\n      grid-column-end: span 1;\n    }\n\n    .item-column {\n      flex: 1 1 50%;\n      grid-column-end: span 1;\n      padding: calc(var(${size.spacing}) / 2);\n    }\n\n    .item-half {\n      flex: 1 1 50%;\n      height: 310px;\n      grid-column-end: span 2;\n      padding: calc(var(${size.spacing}) / 2);\n    }\n\n    .item-full {\n      flex-basis: 100%;\n      grid-column: 1 / -1;\n    }\n`;\n\nconst Main = props => {\n  const name = props.name;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lowerStationData = _useState2[0],\n        setLowerStationData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        upperStationData = _useState4[0],\n        setUpperStationData = _useState4[1];\n\n  const _useState5 = useState({\n    lowerStationLastDay: null,\n    lowerStationLastTwoDay: null,\n    lowerStationLastWeek: null,\n    upperStationLastDay: null,\n    upperStationLastTwoDay: null,\n    upperStationLastWeek: null\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newSnow = _useState6[0],\n        setNewSnow = _useState6[1];\n\n  const _useState7 = useState({\n    data: {\n      labels: [],\n      datasets: [{\n        label: \"\",\n        fill: false,\n        backgroundColor: \"\",\n        data: []\n      }, {\n        label: \"\",\n        fill: false,\n        backgroundColor: \"\",\n        data: []\n      }]\n    }\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        historicSnowData = _useState8[0],\n        setHistoricSnowData = _useState8[1];\n\n  const lowerWeather = name && stationNumbers[name].lower;\n  useEffect(() => {\n    const getWeather = async station => {\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      setLowerStationData(data);\n    };\n\n    getWeather(lowerWeather);\n  }, [lowerWeather]);\n  const upperWeather = name && stationNumbers[name].upper;\n  useEffect(() => {\n    const getWeather = async station => {\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setUpperStationData(data);\n    };\n\n    getWeather(upperWeather);\n  }, [upperWeather]);\n  useEffect(() => {\n    const lastDaySnowLowerStation = lowerStationData.slice(0, 23);\n    const newSnowLowerStation = lastDaySnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastDaySnowUpperStation = upperStationData.slice(0, 23);\n    const newSnowUpperStation = lastDaySnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastTwoDaySnowLowerStation = lowerStationData.slice(0, 47);\n    const newTwoDaySnowLowerStation = lastTwoDaySnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastTwoDaySnowUpperStation = upperStationData.slice(0, 47);\n    const newTwoDaySnowUpperStation = lastTwoDaySnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastWeekSnowLowerStation = lowerStationData.slice(0, 160);\n    const newLastWeekSnowLowerStation = lastWeekSnowLowerStation.map(day => {\n      return day.snowHeight;\n    });\n    const lastWeekSnowUpperStation = upperStationData.slice(0, 160);\n    const newLastWeekSnowUpperStation = lastWeekSnowUpperStation.map(day => {\n      return day.snowHeight;\n    });\n    const getNewSnowLowerStation = calNewSnowLastDay(newSnowLowerStation);\n    const getNewSnowUpperStation = calNewSnowLastDay(newSnowUpperStation);\n    const getNewTwoSnowLowerStation = calNewSnowLastDay(newTwoDaySnowLowerStation);\n    const getNewTwoSnowUpperStation = calNewSnowLastDay(newTwoDaySnowUpperStation);\n    const getNewLastWeekSnowLowerStation = calNewSnowLastDay(newLastWeekSnowLowerStation);\n    const getNewLastWeekSnowUpperStation = calNewSnowLastDay(newLastWeekSnowUpperStation);\n    const sumNewSnowLowerStation = getNewSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewSnowUpperStation = getNewSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowLowerStation = getNewTwoSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowUpperStation = getNewTwoSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowLowerStation = getNewLastWeekSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowUpperStation = getNewLastWeekSnowUpperStation.reduce((a, b) => a + b, 0);\n    setNewSnow({\n      lowerStationLastDay: sumNewSnowLowerStation,\n      lowerStationLastTwoDay: sumNewTwoDaySnowLowerStation,\n      lowerStationLastWeek: sumNewLastWeekSnowLowerStation,\n      upperStationLastDay: sumNewSnowUpperStation,\n      upperStationLastTwoDay: sumNewTwoDaySnowUpperStation,\n      upperStationLastWeek: sumNewLastWeekSnowUpperStation\n    });\n  }, [lowerStationData, upperStationData]);\n  const lowerSeasonData = name && stationNumbers[name].seasonDataLower;\n  const upperSeasonData = name && stationNumbers[name].seasonDataUpper;\n  const lowerLabel = name && stationNumbers[name].elevationLower;\n  const upperLabel = name && stationNumbers[name].elevationUpper;\n  useEffect(() => {\n    const getSnowPackData = arr => {\n      const dataArray = [];\n      const dateArray = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10));\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n\n      return {\n        dataArray,\n        dateArray\n      };\n    };\n\n    const upperSnowData = getSnowPackData(upperSeasonData);\n    const lowerSnowData = getSnowPackData(lowerSeasonData);\n    setHistoricSnowData({\n      data: {\n        labels: lowerSnowData.dateArray,\n        datasets: [{\n          label: lowerLabel,\n          backgroundColor: \"#50D8D7\",\n          data: lowerSnowData.dataArray\n        }, {\n          label: upperLabel,\n          backgroundColor: \"#547AA5\",\n          data: upperSnowData.dataArray\n        }]\n      }\n    });\n  }, [lowerLabel, lowerSeasonData, upperLabel, upperSeasonData]);\n  const lowerStationName = name && stationNumbers[name].nameLower;\n  const lowerStationElevation = name && stationNumbers[name].elevationLower;\n  const lowerStation = lowerStationData && lowerStationData[0];\n  const lowerStationTemp = lowerStation && lowerStation.airTempAvg;\n  const lowerStationNewSnowLastDay = newSnow && newSnow.lowerStationLastDay;\n  const lowerStationNewSnowLastTwoDay = newSnow && newSnow.lowerStationLastTwoDay;\n  const lowerStationNewSnowLastWeek = newSnow && newSnow.lowerStationLastWeek;\n  const lowerStationSnowDepth = lowerStation && lowerStation.snowHeight;\n  const upperStationName = name && stationNumbers[name].nameUpper;\n  const upperStationElevation = name && stationNumbers[name].elevationUpper;\n  const upperStation = upperStationData && upperStationData[0];\n  const upperStationTemp = upperStation && upperStation.airTempAvg;\n  const upperStationNewSnowLastDay = newSnow && newSnow.upperStationLastDay;\n  const upperStationNewSnowTwoDay = newSnow && newSnow.upperStationLastTwoDay;\n  const upperStationNewSnowLastWeek = newSnow && newSnow.upperStationLastWeek;\n  const upperStationSnowDepth = upperStation && upperStation.snowHeight;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"item-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(WeatherDetailsList, {\n    highElevationName: upperStationName,\n    highElevation: upperStationElevation,\n    lowElevationName: lowerStationName,\n    lowElevation: lowerStationElevation,\n    highTemp: upperStationTemp,\n    lowTemp: lowerStationTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"item-half\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(SnowDetails, {\n    lowElevationName: lowerStationName,\n    lowElevation: lowerStationElevation,\n    newSnowLastDayLower: lowerStationNewSnowLastDay,\n    newSnowLastTwoDayLower: lowerStationNewSnowLastTwoDay,\n    newSnowLastWeekLower: lowerStationNewSnowLastWeek,\n    snowDepthLower: lowerStationSnowDepth,\n    highElevationName: upperStationName,\n    highElevation: upperStationElevation,\n    newSnowLastDayUpper: upperStationNewSnowLastDay,\n    newSnowLastTwoDayUpper: upperStationNewSnowTwoDay,\n    newSnowLastWeekUpper: upperStationNewSnowLastWeek,\n    snowDepthUpper: upperStationSnowDepth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"item-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    data: historicSnowData.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => {\n  const areaReducer = state.areaReducer;\n  return areaReducer;\n};\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Main.js"],"names":["React","useEffect","useState","connect","styled","size","colors","WeatherDetailsList","SnowDetails","calNewSnowLastDay","Chart","stationNumbers","Container","spacing","main","Main","props","name","lowerStationData","setLowerStationData","upperStationData","setUpperStationData","lowerStationLastDay","lowerStationLastTwoDay","lowerStationLastWeek","upperStationLastDay","upperStationLastTwoDay","upperStationLastWeek","newSnow","setNewSnow","data","labels","datasets","label","fill","backgroundColor","historicSnowData","setHistoricSnowData","lowerWeather","lower","getWeather","station","url","response","fetch","json","console","log","upperWeather","upper","lastDaySnowLowerStation","slice","newSnowLowerStation","map","day","snowHeight","lastDaySnowUpperStation","newSnowUpperStation","lastTwoDaySnowLowerStation","newTwoDaySnowLowerStation","lastTwoDaySnowUpperStation","newTwoDaySnowUpperStation","lastWeekSnowLowerStation","newLastWeekSnowLowerStation","lastWeekSnowUpperStation","newLastWeekSnowUpperStation","getNewSnowLowerStation","getNewSnowUpperStation","getNewTwoSnowLowerStation","getNewTwoSnowUpperStation","getNewLastWeekSnowLowerStation","getNewLastWeekSnowUpperStation","sumNewSnowLowerStation","reduce","a","b","sumNewSnowUpperStation","sumNewTwoDaySnowLowerStation","sumNewTwoDaySnowUpperStation","sumNewLastWeekSnowLowerStation","sumNewLastWeekSnowUpperStation","lowerSeasonData","seasonDataLower","upperSeasonData","seasonDataUpper","lowerLabel","elevationLower","upperLabel","elevationUpper","getSnowPackData","arr","dataArray","dateArray","i","length","date","charAt","push","snowpack","upperSnowData","lowerSnowData","lowerStationName","nameLower","lowerStationElevation","lowerStation","lowerStationTemp","airTempAvg","lowerStationNewSnowLastDay","lowerStationNewSnowLastTwoDay","lowerStationNewSnowLastWeek","lowerStationSnowDepth","upperStationName","nameUpper","upperStationElevation","upperStation","upperStationTemp","upperStationNewSnowLastDay","upperStationNewSnowTwoDay","upperStationNewSnowLastWeek","upperStationSnowDepth","mapStateToProps","state","areaReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from \"@emotion/styled\";\nimport size from \"../styles/size\";\nimport colors from '../styles/colors';\nimport { WeatherDetailsList } from './WeatherDetailsList';\nimport { SnowDetails } from './SnowDetails';\nimport { calNewSnowLastDay } from '../utils/calNewSnowLastDay';\nimport { Chart } from '../components/Chart';\nimport { stationNumbers } from '../data/weatherStationDetails';\n\nconst Container = styled(\"main\")`\n    flex: 1;\n    grid-area: main;\n    padding: ${size.spacing};\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n    background-color: ${colors.main};\n\n    .dashboard {\n      --column-count: 3;\n      display: grid;\n      grid-template-columns: repeat(var(--column-count), 1fr);\n      grid-gap: ${size.spacing};\n    }\n\n    .column-item {\n      --column-count: 3;\n      flex-basis: calc(100%/var(--column-count));\n      grid-column-end: span 1;\n    }\n\n    .item-column {\n      flex: 1 1 50%;\n      grid-column-end: span 1;\n      padding: calc(var(${size.spacing}) / 2);\n    }\n\n    .item-half {\n      flex: 1 1 50%;\n      height: 310px;\n      grid-column-end: span 2;\n      padding: calc(var(${size.spacing}) / 2);\n    }\n\n    .item-full {\n      flex-basis: 100%;\n      grid-column: 1 / -1;\n    }\n`\nconst Main = (props) => {\n  const { name } = props;\n\n  const [lowerStationData, setLowerStationData] = useState([]);\n  const [upperStationData, setUpperStationData] = useState([]);\n  const [newSnow, setNewSnow] = useState({\n    lowerStationLastDay: null,\n    lowerStationLastTwoDay: null,\n    lowerStationLastWeek: null,\n    upperStationLastDay: null,\n    upperStationLastTwoDay: null,\n    upperStationLastWeek: null,\n  });\n  const [historicSnowData, setHistoricSnowData] = useState(\n    {\n      data: {\n        labels: [],\n        datasets: [\n          { label: \"\", fill: false, backgroundColor: \"\", data: [] },\n          { label: \"\", fill: false, backgroundColor: \"\", data: [] }\n        ]\n      }\n    }\n  )\n  const lowerWeather = name && stationNumbers[name].lower;\n\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data)\n\n      setLowerStationData(data);\n    }\n\n    getWeather(lowerWeather);\n\n  }, [lowerWeather])\n\n  const upperWeather = name && stationNumbers[name].upper;\n  useEffect(() => {\n    const getWeather = async (station) => {\n\n      const url = `https://wx.avalanche.ca/stations/${station}/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n\n      setUpperStationData(data)\n    }\n\n    getWeather(upperWeather);\n\n  }, [upperWeather])\n\n  useEffect(() => {\n    const lastDaySnowLowerStation = lowerStationData.slice(0, 23);\n    const newSnowLowerStation = lastDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastDaySnowUpperStation = upperStationData.slice(0, 23);\n    const newSnowUpperStation = lastDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowLowerStation = lowerStationData.slice(0, 47);\n    const newTwoDaySnowLowerStation = lastTwoDaySnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastTwoDaySnowUpperStation = upperStationData.slice(0, 47);\n    const newTwoDaySnowUpperStation = lastTwoDaySnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowLowerStation = lowerStationData.slice(0, 160);\n    const newLastWeekSnowLowerStation = lastWeekSnowLowerStation.map((day) => {\n      return day.snowHeight;\n    })\n    const lastWeekSnowUpperStation = upperStationData.slice(0, 160);\n    const newLastWeekSnowUpperStation = lastWeekSnowUpperStation.map((day) => {\n      return day.snowHeight;\n    })\n\n    const getNewSnowLowerStation = calNewSnowLastDay(newSnowLowerStation);\n    const getNewSnowUpperStation = calNewSnowLastDay(newSnowUpperStation);\n    const getNewTwoSnowLowerStation = calNewSnowLastDay(newTwoDaySnowLowerStation);\n    const getNewTwoSnowUpperStation = calNewSnowLastDay(newTwoDaySnowUpperStation);\n    const getNewLastWeekSnowLowerStation = calNewSnowLastDay(newLastWeekSnowLowerStation);\n    const getNewLastWeekSnowUpperStation = calNewSnowLastDay(newLastWeekSnowUpperStation);\n    const sumNewSnowLowerStation = getNewSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewSnowUpperStation = getNewSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowLowerStation = getNewTwoSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewTwoDaySnowUpperStation = getNewTwoSnowUpperStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowLowerStation = getNewLastWeekSnowLowerStation.reduce((a, b) => a + b, 0);\n    const sumNewLastWeekSnowUpperStation = getNewLastWeekSnowUpperStation.reduce((a, b) => a + b, 0);\n\n    setNewSnow({\n      lowerStationLastDay: sumNewSnowLowerStation,\n      lowerStationLastTwoDay: sumNewTwoDaySnowLowerStation,\n      lowerStationLastWeek: sumNewLastWeekSnowLowerStation,\n      upperStationLastDay: sumNewSnowUpperStation,\n      upperStationLastTwoDay: sumNewTwoDaySnowUpperStation,\n      upperStationLastWeek: sumNewLastWeekSnowUpperStation\n    });\n  }, [lowerStationData, upperStationData])\n\n  const lowerSeasonData = name && stationNumbers[name].seasonDataLower;\n  const upperSeasonData = name && stationNumbers[name].seasonDataUpper;\n  const lowerLabel = name && stationNumbers[name].elevationLower;\n  const upperLabel = name && stationNumbers[name].elevationUpper;\n  useEffect(() => {\n    const getSnowPackData = (arr) => {\n      const dataArray = [];\n      const dateArray = [];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n          dateArray.push(arr[i].date.slice(0, 10))\n          dataArray.push(arr[i].snowpack);\n        }\n      }\n      return { dataArray, dateArray };\n    };\n    const upperSnowData = getSnowPackData(upperSeasonData);\n    const lowerSnowData = getSnowPackData(lowerSeasonData);\n    setHistoricSnowData({\n      data: {\n        labels: lowerSnowData.dateArray,\n        datasets: [\n          {\n            label: lowerLabel,\n            backgroundColor: \"#50D8D7\",\n            data: lowerSnowData.dataArray\n          },\n          {\n            label: upperLabel,\n            backgroundColor: \"#547AA5\",\n            data: upperSnowData.dataArray\n          }]\n      }\n    })\n  }, [lowerLabel, lowerSeasonData, upperLabel, upperSeasonData])\n\n  const lowerStationName = name && stationNumbers[name].nameLower;\n  const lowerStationElevation = name && stationNumbers[name].elevationLower;\n  const lowerStation = lowerStationData && lowerStationData[0];\n  const lowerStationTemp = lowerStation && lowerStation.airTempAvg;\n  const lowerStationNewSnowLastDay = newSnow && newSnow.lowerStationLastDay;\n  const lowerStationNewSnowLastTwoDay = newSnow && newSnow.lowerStationLastTwoDay;\n  const lowerStationNewSnowLastWeek = newSnow && newSnow.lowerStationLastWeek;\n  const lowerStationSnowDepth = lowerStation && lowerStation.snowHeight;\n\n  const upperStationName = name && stationNumbers[name].nameUpper;\n  const upperStationElevation = name && stationNumbers[name].elevationUpper;\n  const upperStation = upperStationData && upperStationData[0];\n  const upperStationTemp = upperStation && upperStation.airTempAvg;\n  const upperStationNewSnowLastDay = newSnow && newSnow.upperStationLastDay;\n  const upperStationNewSnowTwoDay = newSnow && newSnow.upperStationLastTwoDay;\n  const upperStationNewSnowLastWeek = newSnow && newSnow.upperStationLastWeek;\n  const upperStationSnowDepth = upperStation && upperStation.snowHeight;\n\n  return (\n    <Container>\n      <div className=\"dashboard\">\n        <div className=\"item-column\">\n          {/* <div className=\"card\"> */}\n          <WeatherDetailsList\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation}\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation}\n            highTemp={upperStationTemp}\n            lowTemp={lowerStationTemp} />\n        </div>\n        <div className=\"item-column\">\n          \n        </div>\n        <div className=\"item-half\">\n          <SnowDetails\n            lowElevationName={lowerStationName}\n            lowElevation={lowerStationElevation}\n            newSnowLastDayLower={lowerStationNewSnowLastDay}\n            newSnowLastTwoDayLower={lowerStationNewSnowLastTwoDay}\n            newSnowLastWeekLower={lowerStationNewSnowLastWeek}\n            snowDepthLower={lowerStationSnowDepth}\n            highElevationName={upperStationName}\n            highElevation={upperStationElevation}\n            newSnowLastDayUpper={upperStationNewSnowLastDay}\n            newSnowLastTwoDayUpper={upperStationNewSnowTwoDay}\n            newSnowLastWeekUpper={upperStationNewSnowLastWeek}\n            snowDepthUpper={upperStationSnowDepth} />\n        </div>\n        <div className=\"item-full\">\n          <div className=\"card\">\n            <Chart data={historicSnowData.data} />\n          </div>\n        </div>\n      </div >\n    </Container >\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { areaReducer } = state;\n  return areaReducer;\n};\nexport default connect(mapStateToProps)(Main);"]},"metadata":{},"sourceType":"module"}