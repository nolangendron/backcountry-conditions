{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { DropDown } from './components/DropDown';\n\nfunction App() {\n  const _useState = useState({\n    weatherStations: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        weather = _useState2[0],\n        setWeather = _useState2[1];\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://www.drivebc.ca/api/weather/observations?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      const stationNameStrings = data.map(station => station.station.name);\n      setWeather({\n        weatherStations: stationNameStrings\n      });\n    };\n\n    getWeather();\n  }, []);\n  console.log(weather.weatherStations);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(DropDown, {\n    data: weather.weatherStations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/App.js"],"names":["React","useEffect","useState","DropDown","App","weatherStations","weather","setWeather","getWeather","url","response","fetch","data","json","stationNameStrings","map","station","name","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACiBF,QAAQ,CAAC;AACrCG,IAAAA,eAAe,EAAE;AADoB,GAAD,CADzB;AAAA;AAAA,QACNC,OADM;AAAA,QACGC,UADH;;AAKbN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAI,6DAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAMC,kBAAkB,GAAGF,IAAI,CAACG,GAAL,CAAUC,OAAD,IAAaA,OAAO,CAACA,OAAR,CAAgBC,IAAtC,CAA3B;AACAV,MAAAA,UAAU,CAAC;AACTF,QAAAA,eAAe,EAAES;AADR,OAAD,CAAV;AAGD,KARD;;AASAN,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;AAYAU,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACD,eAApB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,OAAO,CAACD,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { DropDown } from './components/DropDown';\n\nfunction App() {\n  const [weather, setWeather] = useState({\n    weatherStations: null\n  });\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://www.drivebc.ca/api/weather/observations?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      const stationNameStrings = data.map((station) => station.station.name)\n      setWeather({\n        weatherStations: stationNameStrings\n      })\n    }\n    getWeather();\n  }, [])\n  console.log(weather.weatherStations)\n  return (\n    <div>\n      <DropDown data={weather.weatherStations} />\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}