{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Chart.js\";\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport littleBearData from '../data/littleBearData.json';\nimport coqSummitData from '../data/coqSummitData.json';\n\nconst getSnowPackData = arr => {\n  console.log(arr);\n  const dataArray = [];\n  const dateArray = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n      dateArray.push(arr[i].date.slice(0, 10));\n      dataArray.push(arr[i].snowpack);\n    }\n  }\n\n  return {\n    dataArray,\n    dateArray\n  };\n};\n\nconst littleBearSnowData = getSnowPackData(littleBearData);\nconst coqSummitSnowData = getSnowPackData(coqSummitData);\nexport const Chart = () => {\n  const _useState = useState({\n    labels: [],\n    datasets: [{\n      label: \"1660m\",\n      fill: false,\n      data: littleBearSnowData\n    }, {\n      label: \"1220m\",\n      fill: false,\n      data: coqSummitSnowData\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        snowData = _useState2[0],\n        setSnowData = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: snowData,\n    options: {\n      title: {\n        display: true,\n        text: \"Snow Depth for the Coquihalla Area\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/Chart.js"],"names":["React","useState","Line","littleBearData","coqSummitData","getSnowPackData","arr","console","log","dataArray","dateArray","i","length","date","charAt","push","slice","snowpack","littleBearSnowData","coqSummitSnowData","Chart","labels","datasets","label","fill","data","snowData","setSnowData","title","display","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,eAAe,GAAIC,GAAD,IAAS;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAMG,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIL,GAAG,CAACK,CAAD,CAAH,CAAOE,IAAP,CAAYC,MAAZ,CAAmB,EAAnB,MAA2B,GAA3B,IAAkCR,GAAG,CAACK,CAAD,CAAH,CAAOE,IAAP,CAAYC,MAAZ,CAAmB,EAAnB,MAA2B,GAAjE,EAAsE;AACpEJ,MAAAA,SAAS,CAACK,IAAV,CAAeT,GAAG,CAACK,CAAD,CAAH,CAAOE,IAAP,CAAYG,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAf;AACAP,MAAAA,SAAS,CAACM,IAAV,CAAeT,GAAG,CAACK,CAAD,CAAH,CAAOM,QAAtB;AACD;AACF;;AACD,SAAO;AAAER,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP;AACD,CAXD;;AAYA,MAAMQ,kBAAkB,GAAGb,eAAe,CAACF,cAAD,CAA1C;AACA,MAAMgB,iBAAiB,GAAGd,eAAe,CAACD,aAAD,CAAzC;AAEA,OAAO,MAAMgB,KAAK,GAAG,MAAM;AAAA,oBACOnB,QAAQ,CAAC;AACvCoB,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,QAAQ,EAAE,CACR;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE,KAAxB;AAA+BC,MAAAA,IAAI,EAAEP;AAArC,KADQ,EAER;AAAEK,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE,KAAxB;AAA+BC,MAAAA,IAAI,EAAEN;AAArC,KAFQ;AAF6B,GAAD,CADf;AAAA;AAAA,QAClBO,QADkB;AAAA,QACRC,WADQ;;AASzB,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAED,QADR;AAEE,IAAA,OAAO,EAAE;AACPE,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE;AAFD;AADA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CAtBM","sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport littleBearData from '../data/littleBearData.json';\nimport coqSummitData from '../data/coqSummitData.json';\n\nconst getSnowPackData = (arr) => {\n  console.log(arr)\n  const dataArray = [];\n  const dateArray = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].date.charAt(11) === \"2\" && arr[i].date.charAt(12) === \"3\") {\n      dateArray.push(arr[i].date.slice(0, 10))\n      dataArray.push(arr[i].snowpack);\n    }\n  }\n  return { dataArray, dateArray };\n};\nconst littleBearSnowData = getSnowPackData(littleBearData);\nconst coqSummitSnowData = getSnowPackData(coqSummitData);\n\nexport const Chart = () => {\n  const [snowData, setSnowData] = useState({\n    labels: [],\n    datasets: [\n      { label: \"1660m\", fill: false, data: littleBearSnowData },\n      { label: \"1220m\", fill: false, data: coqSummitSnowData }\n    ]\n  })\n\n  return (\n    <div className=\"chart\">\n      <Line\n        data={snowData}\n        options={{\n          title: {\n            display: true,\n            text: \"Snow Depth for the Coquihalla Area\"\n          }\n        }\n        } />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}