{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js\";\nimport React, { useState, useEffect } from 'react';\nexport const DropDown = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        weatherStationsList = _useState2[0],\n        setWeatherStationsList = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weatherStation = _useState4[0],\n        setWeatherStation = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedStation = _useState6[0],\n        setSelectedStation = _useState6[1];\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://www.drivebc.ca/api/weather/observations/?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherStationsList(data);\n    };\n\n    getWeather();\n  }, []);\n  useEffect(() => {\n    function getStation(station) {\n      return station.station.name === weatherStation;\n    }\n\n    const selectedWeatherStation = weatherStationsList.find(getStation);\n    setSelectedStation(selectedWeatherStation);\n  }, [selectedStation, weatherStation, weatherStationsList]);\n  const name = selectedStation && selectedStation.station && selectedStation.station.name;\n  const snow = selectedStation && selectedStation.station && selectedStation.station.snowDepth;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, snow));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js"],"names":["React","useState","useEffect","DropDown","weatherStationsList","setWeatherStationsList","weatherStation","setWeatherStation","selectedStation","setSelectedStation","getWeather","url","response","fetch","data","json","getStation","station","name","selectedWeatherStation","find","snow","snowDepth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBAC0BF,QAAQ,CAAC,EAAD,CADlC;AAAA;AAAA,QACrBG,mBADqB;AAAA,QACAC,sBADA;;AAAA,qBAEgBJ,QAAQ,EAFxB;AAAA;AAAA,QAErBK,cAFqB;AAAA,QAELC,iBAFK;;AAAA,qBAGkBN,QAAQ,EAH1B;AAAA;AAAA,QAGrBO,eAHqB;AAAA,QAGJC,kBAHI;;AAK5BP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAG,YAAY;AAE7B,YAAMC,GAAG,GAAI,8DAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAV,MAAAA,sBAAsB,CAACS,IAAD,CAAtB;AACD,KAND;;AAOAJ,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACd,aAASc,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,aAAOA,OAAO,CAACA,OAAR,CAAgBC,IAAhB,KAAyBZ,cAAhC;AACD;;AACD,UAAMa,sBAAsB,GAAGf,mBAAmB,CAACgB,IAApB,CAAyBJ,UAAzB,CAA/B;AACAP,IAAAA,kBAAkB,CAACU,sBAAD,CAAlB;AACD,GANQ,EAMN,CAACX,eAAD,EAAkBF,cAAlB,EAAkCF,mBAAlC,CANM,CAAT;AAOA,QAAMc,IAAI,GAAGV,eAAe,IAAIA,eAAe,CAACS,OAAnC,IAA8CT,eAAe,CAACS,OAAhB,CAAwBC,IAAnF;AACA,QAAMG,IAAI,GAAGb,eAAe,IAAIA,eAAe,CAACS,OAAnC,IAA8CT,eAAe,CAACS,OAAhB,CAAwBK,SAAnF;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAL,CAHF,CADF;AAOD,CAjCM","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const DropDown = () => {\n  const [weatherStationsList, setWeatherStationsList] = useState([]);\n  const [weatherStation, setWeatherStation] = useState();\n  const [selectedStation, setSelectedStation] = useState();\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://www.drivebc.ca/api/weather/observations/?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherStationsList(data)\n    }\n    getWeather();\n  }, [])\n\n  useEffect(() => {\n    function getStation(station) {\n      return station.station.name === weatherStation;\n    }\n    const selectedWeatherStation = weatherStationsList.find(getStation);\n    setSelectedStation(selectedWeatherStation)\n  }, [selectedStation, weatherStation, weatherStationsList]);\n  const name = selectedStation && selectedStation.station && selectedStation.station.name;\n  const snow = selectedStation && selectedStation.station && selectedStation.station.snowDepth;\n\n  return (\n    <div>\n\n      <h2>{name}</h2>\n      <h2>{snow}</h2>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}