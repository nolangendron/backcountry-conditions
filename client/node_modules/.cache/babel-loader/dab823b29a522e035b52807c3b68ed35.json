{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js\";\nimport React, { useState, useEffect } from 'react';\nexport const DropDown = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        weatherStationData = _useState2[0],\n        setWeatherStationData = _useState2[1];\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://www.drivebc.ca/api/weather/observations/25221?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherStationData(data);\n    };\n\n    getWeather();\n  }, []);\n  console.log(weatherStationData);\n  const station = weatherStationData && weatherStationData.station && weatherStationData.station.station;\n  const stationName = station && station.name;\n  const stationElevation = station && station.elevation;\n  const stationTemp = station && station.airTemp;\n  const spaceIndexAirTemp = stationTemp && stationTemp.indexOf(\" \");\n  const slicedAirTemp = stationstationTemp.slice(0, Number(spaceIndexAirTemp));\n  console.log(spaceIndexAirTemp);\n  const stationSnowFall = station && station.snowEnd;\n  const stationSnowDepth = station && station.snowDepth;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, stationName), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, stationElevation, \" m\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, stationSnowFall), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, stationSnowDepth));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/DropDown.js"],"names":["React","useState","useEffect","DropDown","weatherStationData","setWeatherStationData","getWeather","url","response","fetch","data","json","console","log","station","stationName","name","stationElevation","elevation","stationTemp","airTemp","spaceIndexAirTemp","indexOf","slicedAirTemp","stationstationTemp","slice","Number","stationSnowFall","snowEnd","stationSnowDepth","snowDepth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBACwBF,QAAQ,CAAC,EAAD,CADhC;AAAA;AAAA,QACrBG,kBADqB;AAAA,QACDC,qBADC;;AAG5BH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,UAAU,GAAG,YAAY;AAE7B,YAAMC,GAAG,GAAI,mEAAb;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,qBAAqB,CAACK,IAAD,CAArB;AACD,KAND;;AAOAJ,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAUAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAZ;AACA,QAAMU,OAAO,GAAGV,kBAAkB,IAAIA,kBAAkB,CAACU,OAAzC,IAAoDV,kBAAkB,CAACU,OAAnB,CAA2BA,OAA/F;AACA,QAAMC,WAAW,GAAGD,OAAO,IAAIA,OAAO,CAACE,IAAvC;AACA,QAAMC,gBAAgB,GAAGH,OAAO,IAAIA,OAAO,CAACI,SAA5C;AACA,QAAMC,WAAW,GAAGL,OAAO,IAAIA,OAAO,CAACM,OAAvC;AACA,QAAMC,iBAAiB,GAAGF,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,GAApB,CAAzC;AACA,QAAMC,aAAa,GAAGC,kBAAkB,CAACC,KAAnB,CAAyB,CAAzB,EAA4BC,MAAM,CAACL,iBAAD,CAAlC,CAAtB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,iBAAZ;AAEA,QAAMM,eAAe,GAAGb,OAAO,IAAIA,OAAO,CAACc,OAA3C;AACA,QAAMC,gBAAgB,GAAGf,OAAO,IAAIA,OAAO,CAACgB,SAA5C;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,WAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,gBAAL,OAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,eAAL,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,gBAAL,CALF,CADF;AASD,CAlCM","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const DropDown = () => {\n  const [weatherStationData, setWeatherStationData] = useState([]);\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://www.drivebc.ca/api/weather/observations/25221?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setWeatherStationData(data)\n    }\n    getWeather();\n  }, [])\n  console.log(weatherStationData)\n  const station = weatherStationData && weatherStationData.station && weatherStationData.station.station;\n  const stationName = station && station.name;\n  const stationElevation = station && station.elevation;\n  const stationTemp = station && station.airTemp;\n  const spaceIndexAirTemp = stationTemp && stationTemp.indexOf(\" \");\n  const slicedAirTemp = stationstationTemp.slice(0, Number(spaceIndexAirTemp));\n  console.log(spaceIndexAirTemp);\n\n  const stationSnowFall = station && station.snowEnd;\n  const stationSnowDepth = station && station.snowDepth;\n\n  return (\n    <div>\n      <h2>{stationName}</h2>\n      <h2>{stationElevation} m</h2>\n      {/* <h2>{slicedAirTemp}</h2> */}\n      <h2>{stationSnowFall}</h2>\n      <h2>{stationSnowDepth}</h2>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}