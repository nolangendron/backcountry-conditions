{"ast":null,"code":"import _slicedToArray from \"/Users/nolan/Documents/2019 - Projects/snow-data/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nolan/Documents/2019 - Projects/snow-data/src/components/CurrentWeather.js\";\nimport React, { useState, useEffect } from 'react';\nexport const CurrentWeather = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        coqSummitStationData = _useState2[0],\n        setCoqSummitStationData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        littleBearStationData = _useState4[0],\n        setLittleBearStationData = _useState4[1];\n\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://www.drivebc.ca/api/weather/observations/25221?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setCoqSummitStationData(data);\n    };\n\n    getWeather();\n  }, []);\n  useEffect(() => {\n    const getWeather = async () => {\n      const url = `https://wx.avalanche.ca/stations/17/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLittleBearStationData(data);\n    };\n\n    getWeather();\n  }, []);\n  const station = coqSummitStationData && coqSummitStationData.station && coqSummitStationData.station.station;\n  const stationName = station && station.name;\n  const stationElevation = station && station.elevation;\n  const stationTemp = station && station.airTemp;\n  const spaceIndexAirTemp = stationTemp && stationTemp.indexOf(\" \");\n  const slicedAirTemp = stationTemp && stationTemp.slice(0, Number(spaceIndexAirTemp));\n  const stationSnowFall = station && station.snowEnd;\n  const stationSnowDepth = station && station.snowDepth;\n  const littleBearStation = littleBearStationData && littleBearStationData[1];\n  console.log(littleBearStation);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, stationName), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Elevation: \", stationElevation, \" m\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Current Temp: \", slicedAirTemp, \" \", String.fromCharCode(176), \"C\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Snow Fall: \", stationSnowFall), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Snow Depth: \", stationSnowDepth)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, stationName), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Elevation: \", stationElevation, \" m\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Current Temp: \", slicedAirTemp, \" \", String.fromCharCode(176), \"C\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Snow Fall: \", stationSnowFall), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Snow Depth: \", stationSnowDepth)));\n};","map":{"version":3,"sources":["/Users/nolan/Documents/2019 - Projects/snow-data/src/components/CurrentWeather.js"],"names":["React","useState","useEffect","CurrentWeather","coqSummitStationData","setCoqSummitStationData","littleBearStationData","setLittleBearStationData","getWeather","url","response","fetch","data","json","station","stationName","name","stationElevation","elevation","stationTemp","airTemp","spaceIndexAirTemp","indexOf","slicedAirTemp","slice","Number","stationSnowFall","snowEnd","stationSnowDepth","snowDepth","littleBearStation","console","log","String","fromCharCode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const CurrentWeather = () => {\n  const [coqSummitStationData, setCoqSummitStationData] = useState([]);\n  const [littleBearStationData, setLittleBearStationData] = useState([]);\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://www.drivebc.ca/api/weather/observations/25221?format=json`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setCoqSummitStationData(data)\n    }\n    getWeather();\n  }, [])\n\n  useEffect(() => {\n    const getWeather = async () => {\n\n      const url = `https://wx.avalanche.ca/stations/17/measurements/`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setLittleBearStationData(data)\n    }\n    getWeather();\n  }, [])\n\n  const station = coqSummitStationData && coqSummitStationData.station && coqSummitStationData.station.station;\n  const stationName = station && station.name;\n  const stationElevation = station && station.elevation;\n  const stationTemp = station && station.airTemp;\n  const spaceIndexAirTemp = stationTemp && stationTemp.indexOf(\" \");\n  const slicedAirTemp = stationTemp && stationTemp.slice(0, Number(spaceIndexAirTemp));\n  const stationSnowFall = station && station.snowEnd;\n  const stationSnowDepth = station && station.snowDepth;\n\n  const littleBearStation = littleBearStationData && littleBearStationData[1];\n  console.log(littleBearStation)\n\n  return (\n    <div>\n      <div>\n        <h2>{stationName}</h2>\n        <h2>Elevation: {stationElevation} m</h2>\n        <h2>Current Temp: {slicedAirTemp} {String.fromCharCode(176)}C</h2>\n        <h2>Snow Fall: {stationSnowFall}</h2>\n        <h2>Snow Depth: {stationSnowDepth}</h2>\n      </div>\n      <div>\n        <h2>{stationName}</h2>\n        <h2>Elevation: {stationElevation} m</h2>\n        <h2>Current Temp: {slicedAirTemp} {String.fromCharCode(176)}C</h2>\n        <h2>Snow Fall: {stationSnowFall}</h2>\n        <h2>Snow Depth: {stationSnowDepth}</h2>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}